warning: unused import: `std::fmt::DebugMap`
 --> src/dft.rs:7:5
  |
7 | use std::fmt::DebugMap;
  |     ^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Div`
 --> src/dft.rs:8:21
  |
8 | use std::ops::{Add, Div, Mul, Neg, Sub};
  |                     ^^^

warning: unused import: `PairingEngine`
 --> src/dft.rs:9:14
  |
9 | use ark_ec::{PairingEngine, ProjectiveCurve};
  |              ^^^^^^^^^^^^^

warning: unused import: `ark_serialize::CanonicalSerialize`
  --> src/dft.rs:15:5
   |
15 | use ark_serialize::CanonicalSerialize;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::ops::Neg`
   --> src/dft.rs:756:9
    |
756 |     use std::ops::Neg;
    |         ^^^^^^^^^^^^^

warning: unused import: `ark_ec::mnt4::G1Projective`
   --> src/dft.rs:760:9
    |
760 |     use ark_ec::mnt4::G1Projective;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ark_bn254::G2Affine`
  --> src/kzg.rs:20:5
   |
20 | use ark_bn254::G2Affine;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unnecessary parentheses around assigned value
   --> src/kzg.rs:311:18
    |
311 |         status = (prod.is_one());
    |                  ^             ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
311 -         status = (prod.is_one());
311 +         status = prod.is_one();
    |

warning: unused import: `ark_bls12_377::g2`
 --> src/multi/setup.rs:2:5
  |
2 | use ark_bls12_377::g2;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `ark_test_curves::pairing::Pairing`
  --> src/multi/setup.rs:12:5
   |
12 | use ark_test_curves::pairing::Pairing;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ark_bls12_381::Bls12_381`
  --> src/multi/setup.rs:21:5
   |
21 | use ark_bls12_381::Bls12_381;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ark_bn254::Bn254`
  --> src/multi/setup.rs:22:5
   |
22 | use ark_bn254::Bn254;
   |     ^^^^^^^^^^^^^^^^

warning: unused import: `std::marker::PhantomData`
 --> src/ramlookup/caulkplus.rs:4:5
  |
4 | use std::marker::PhantomData;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ark_msm::msm::VariableBaseMSM`
 --> src/ramlookup/caulkplus.rs:8:5
  |
8 | use ark_msm::msm::VariableBaseMSM;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `RngCore` and `Rng`
  --> src/ramlookup/caulkplus.rs:13:12
   |
13 | use rand::{Rng, RngCore};
   |            ^^^  ^^^^^^^

warning: unnecessary parentheses around assigned value
   --> src/ramlookup/caulkplus.rs:269:15
    |
269 |     let b_c = (lhs == rhs);
    |               ^          ^
    |
help: remove these parentheses
    |
269 -     let b_c = (lhs == rhs);
269 +     let b_c = lhs == rhs;
    |

warning: unnecessary parentheses around assigned value
   --> src/ramlookup/caulkplus.rs:276:21
    |
276 |     let b_opening = (E::pairing(u_com, g2) == E::pairing(proof.z_i_com, proof.g2_opening));
    |                     ^                                                                    ^
    |
help: remove these parentheses
    |
276 -     let b_opening = (E::pairing(u_com, g2) == E::pairing(proof.z_i_com, proof.g2_opening));
276 +     let b_opening = E::pairing(u_com, g2) == E::pairing(proof.z_i_com, proof.g2_opening);
    |

warning: unused import: `PrimeField`
   --> src/ramlookup/caulkplus.rs:697:25
    |
697 |     use ark_ff::{Field, PrimeField};
    |                         ^^^^^^^^^^

warning: unused import: `ark_bls12_381::Fr`
   --> src/ramlookup/caulkplus.rs:698:9
    |
698 |     use ark_bls12_381::Fr;
    |         ^^^^^^^^^^^^^^^^^

warning: unused import: `crate::multi::generate_lookup_input`
   --> src/ramlookup/caulkplus.rs:701:9
    |
701 |     use crate::multi::generate_lookup_input;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ark_ff::One`
   --> src/ramlookup/fastupdate.rs:379:9
    |
379 |     use ark_ff::One;
    |         ^^^^^^^^^^^

warning: unused import: `crate::multi::TableInput`
 --> src/ramlookup/cq.rs:1:5
  |
1 | use crate::multi::TableInput;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `CaulkPlusProverInput` and `CaulkPlusPublicParams`
 --> src/ramlookup/cq.rs:2:35
  |
2 | use crate::ramlookup::caulkplus::{CaulkPlusProverInput, CaulkPlusPublicParams};
  |                                   ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `compute_scalar_coefficients_naive`
 --> src/ramlookup/cq.rs:4:34
  |
4 |     compute_scalar_coefficients, compute_scalar_coefficients_naive,
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `cfg_into_iter`
  --> src/ramlookup/cq.rs:13:15
   |
13 | use ark_std::{cfg_into_iter, UniformRand};
   |               ^^^^^^^^^^^^^

warning: unused import: `DivAssign`
  --> src/ramlookup/cq.rs:21:37
   |
21 | use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Neg};
   |                                     ^^^^^^^^^

warning: unnecessary parentheses around method argument
    --> src/ramlookup/cq.rs:1115:45
     |
1115 |         let mut f = File::open(path).expect((format!("Unable to open file {path}").as_str()));
     |                                             ^                                              ^
     |
help: remove these parentheses
     |
1115 -         let mut f = File::open(path).expect((format!("Unable to open file {path}").as_str()));
1115 +         let mut f = File::open(path).expect(format!("Unable to open file {path}").as_str());
     |

warning: unnecessary parentheses around method argument
    --> src/ramlookup/cq.rs:1475:49
     |
1475 |             let mut f = File::open(path).expect((format!("Unable to open file {path}").as_str()));
     |                                                 ^                                              ^
     |
help: remove these parentheses
     |
1475 -             let mut f = File::open(path).expect((format!("Unable to open file {path}").as_str()));
1475 +             let mut f = File::open(path).expect(format!("Unable to open file {path}").as_str());
     |

warning: denote infinite loops with `loop { ... }`
    --> src/ramlookup/cq.rs:1650:13
     |
1650 |             while true {
     |             ^^^^^^^^^^ help: use `loop`
     |
     = note: `#[warn(while_true)]` on by default

warning: unnecessary parentheses around `if` condition
    --> src/ramlookup/cq.rs:2096:16
     |
2096 |             if (*log_k == 0) {
     |                ^           ^
     |
help: remove these parentheses
     |
2096 -             if (*log_k == 0) {
2096 +             if *log_k == 0 {
     |

warning: unused import: `std::marker::PhantomData`
 --> src/ramlookup/mod.rs:6:5
  |
6 | use std::marker::PhantomData;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Neg`
 --> src/ramlookup/mod.rs:7:48
  |
7 | use std::ops::{AddAssign, Div, Mul, MulAssign, Neg, Sub};
  |                                                ^^^

warning: unused imports: `BigInteger` and `FftField`
 --> src/ramlookup/mod.rs:9:14
  |
9 | use ark_ff::{BigInteger, FftField, Field, One, PrimeField, Zero};
  |              ^^^^^^^^^^  ^^^^^^^^

warning: unused import: `kzg10`
  --> src/ramlookup/mod.rs:11:23
   |
11 | use ark_poly_commit::{kzg10, Polynomial, UVPolynomial};
   |                       ^^^^^

warning: unused import: `Proof`
  --> src/ramlookup/mod.rs:12:30
   |
12 | use ark_poly_commit::kzg10::{Proof, VerifierKey};
   |                              ^^^^^

warning: unused imports: `log2` and `test_rng`
  --> src/ramlookup/mod.rs:13:15
   |
13 | use ark_std::{log2, test_rng, time::Instant, UniformRand};
   |               ^^^^  ^^^^^^^^

warning: unused import: `merlin::Transcript`
  --> src/ramlookup/mod.rs:14:5
   |
14 | use merlin::Transcript;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused imports: `LookupInstance`, `LookupProverInput`, `compute_lookup_proof`, `get_poly_and_g2_openings`, and `verify_lookup_proof`
  --> src/ramlookup/mod.rs:16:5
   |
16 |     compute_lookup_proof, get_poly_and_g2_openings, verify_lookup_proof, LookupInstance,
   |     ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^
17 |     LookupProverInput,
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `ark_ff::PrimeField`
    --> src/ramlookup/mod.rs:1118:9
     |
1118 |     use ark_ff::PrimeField;
     |         ^^^^^^^^^^^^^^^^^^

warning: unnecessary parentheses around `if` condition
    --> src/ramlookup/mod.rs:1288:16
     |
1288 |             if (tree[cur_node] >= level_threshold) {
     |                ^                                 ^
     |
help: remove these parentheses
     |
1288 -             if (tree[cur_node] >= level_threshold) {
1288 +             if tree[cur_node] >= level_threshold {
     |

warning: unused import: `AffineCurve`
   --> src/dft.rs:761:18
    |
761 |     use ark_ec::{AffineCurve, PairingEngine};
    |                  ^^^^^^^^^^^

warning: unused import: `ark_test_curves::pairing::Pairing`
  --> src/ramlookup/cq.rs:14:5
   |
14 | use ark_test_curves::pairing::Pairing;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: value assigned to `result` is never read
  --> src/dft.rs:47:13
   |
47 |     let mut result: DensePolynomial<F> = DensePolynomial::zero();
   |             ^^^^^^
   |
   = help: maybe it is overwritten before being read?
   = note: `#[warn(unused_assignments)]` on by default

warning: unused variable: `p`
  --> src/dft.rs:40:5
   |
40 |     p: usize,       // log of domain size
   |     ^ help: if this is intentional, prefix it with an underscore: `_p`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `p`
  --> src/dft.rs:72:5
   |
72 |     p: usize,               // log of degree
   |     ^ help: if this is intentional, prefix it with an underscore: `_p`

warning: value assigned to `result` is never read
  --> src/dft.rs:97:13
   |
97 |     let mut result: DensePolynomial<F> = DensePolynomial::zero();
   |             ^^^^^^
   |
   = help: maybe it is overwritten before being read?

warning: unused variable: `i`
   --> src/dft.rs:101:9
    |
101 |     for i  in 0usize..(ark_std::log2(l) as usize)  {
    |         ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: variable does not need to be mutable
   --> src/dft.rs:109:13
    |
109 |         let mut fred: DensePolynomial<F> = DensePolynomial::from_coefficients_vec(f_coeffs);
    |             ----^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: value assigned to `quotient` is never read
   --> src/dft.rs:135:13
    |
135 |     let mut quotient: DensePolynomial<F> = DensePolynomial::zero();
    |             ^^^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: value assigned to `remainder` is never read
   --> src/dft.rs:136:13
    |
136 |     let mut remainder: DensePolynomial<F> = DensePolynomial::zero();
    |             ^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: value assigned to `quotient` is never read
   --> src/dft.rs:183:13
    |
183 |     let mut quotient: DensePolynomial<F> = DensePolynomial::zero();
    |             ^^^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: value assigned to `remainder` is never read
   --> src/dft.rs:184:13
    |
184 |     let mut remainder: DensePolynomial<F> = DensePolynomial::zero();
    |             ^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: variable does not need to be mutable
   --> src/dft.rs:308:9
    |
308 |     let mut start = Instant::now();
    |         ----^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `a_poly`
   --> src/dft.rs:405:5
    |
405 |     a_poly: &DensePolynomial<F>,
    |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_a_poly`

warning: unused variable: `b_poly`
   --> src/dft.rs:406:5
    |
406 |     b_poly: &DensePolynomial<F>,
    |     ^^^^^^ help: if this is intentional, prefix it with an underscore: `_b_poly`

warning: unused variable: `i`
   --> src/dft.rs:814:13
    |
814 |         for i in 1..npolys {
    |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `start`
   --> src/dft.rs:850:17
    |
850 |         let mut start = Instant::now();
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`

warning: unused variable: `prod`
   --> src/dft.rs:854:13
    |
854 |         let prod = VariableBaseMSM::multi_scalar_mul(grp_vec.as_slice(), scalar_vec.as_slice());
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_prod`

warning: variable does not need to be mutable
   --> src/dft.rs:850:13
    |
850 |         let mut start = Instant::now();
    |             ----^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `rng`
   --> src/dft.rs:868:17
    |
868 |         let mut rng = test_rng();
    |                 ^^^ help: if this is intentional, prefix it with an underscore: `_rng`

warning: variable does not need to be mutable
   --> src/dft.rs:868:13
    |
868 |         let mut rng = test_rng();
    |             ----^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `rng`
   --> src/dft.rs:878:17
    |
878 |         let mut rng = test_rng();
    |                 ^^^ help: if this is intentional, prefix it with an underscore: `_rng`

warning: variable does not need to be mutable
   --> src/dft.rs:878:13
    |
878 |         let mut rng = test_rng();
    |             ----^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `coeffs`
   --> src/dft.rs:901:13
    |
901 |         let coeffs: Vec<E::Fr> = vec![E::Fr::from(1u128), E::Fr::from(1u128), E::Fr::from(1u128)];
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_coeffs`

warning: unused variable: `points`
   --> src/dft.rs:902:13
    |
902 |         let points: Vec<E::Fr> = vec![
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_points`

warning: variable does not need to be mutable
   --> src/dft.rs:936:13
    |
936 |         let mut start = Instant::now();
    |             ----^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `i`
   --> src/dft.rs:954:13
    |
954 |         for i in 0..npolys {
    |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: variable does not need to be mutable
   --> src/dft.rs:959:13
    |
959 |         let mut start = Instant::now();
    |             ----^^^^^
    |             |
    |             help: remove this `mut`

warning: value assigned to `status` is never read
   --> src/kzg.rs:298:17
    |
298 |         let mut status: bool  = false;
    |                 ^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: unused variable: `ptneg`
   --> src/kzg.rs:303:13
    |
303 |         let ptneg = -*point;
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_ptneg`

warning: unused variable: `rhs`
   --> src/kzg.rs:305:13
    |
305 |         let rhs:E::G2Affine = g2x + g2.mul(-*point).into_affine();
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_rhs`

warning: unused variable: `lhs`
   --> src/kzg.rs:306:13
    |
306 |         let lhs:E::G1Affine = *c_com + g1.mul(-*eval).into_affine();
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_lhs`

warning: unused variable: `pi`
   --> src/kzg.rs:296:9
    |
296 |         pi: &E::G1Affine,
    |         ^^ help: if this is intentional, prefix it with an underscore: `_pi`

warning: value assigned to `res` is never read
   --> src/multi/setup.rs:261:17
    |
261 |         let mut res = File::open(path.clone());
    |                 ^^^
    |
    = help: maybe it is overwritten before being read?

warning: variable does not need to be mutable
   --> src/multi/setup.rs:297:21
    |
297 |                 let mut beta = E::Fr::rand(rng);
    |                     ----^^^^
    |                     |
    |                     help: remove this `mut`

warning: unused variable: `actual_degree`
   --> src/multi/mod.rs:753:13
    |
753 |         let actual_degree = N - 1;
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_actual_degree`

warning: unused variable: `path`
   --> src/multi/mod.rs:754:13
    |
754 |         let path = format!("/tmp/poly_openings_{}.log", E::Fq::size_in_bits());
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_path`

warning: unused variable: `rng`
   --> src/multi/mod.rs:757:13
    |
757 |         let rng = &mut ark_std::test_rng();
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`

warning: unused variable: `c_com`
   --> src/multi/mod.rs:761:13
    |
761 |         let c_com = KZGCommit::<E>::commit_g1(&pp.poly_ck, &c_poly);
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_c_com`

warning: unused variable: `openings`
   --> src/multi/mod.rs:764:13
    |
764 |         let openings = KZGCommit::<E>::multiple_open::<E::G2Affine>(&c_poly, &pp.g2_powers, pp.n);
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_openings`

warning: variable does not need to be mutable
   --> src/multi/mod.rs:760:13
    |
760 |         let mut start = Instant::now();
    |             ----^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `rng`
  --> src/ramlookup/caulkplus.rs:87:13
   |
87 |     let mut rng = ark_std::test_rng();
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`

warning: unused variable: `h_domain`
  --> src/ramlookup/caulkplus.rs:89:9
   |
89 |     let h_domain: GeneralEvaluationDomain<E::Fr> = GeneralEvaluationDomain::new(1 << instance.h_domain_size).unwrap();
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_h_domain`

warning: unused variable: `val_s`
   --> src/ramlookup/caulkplus.rs:156:10
    |
156 |     let (val_s, pi_s) = KZGCommit::<E>::open_g1_batch(
    |          ^^^^^ help: if this is intentional, prefix it with an underscore: `_val_s`

warning: variable does not need to be mutable
  --> src/ramlookup/caulkplus.rs:87:9
   |
87 |     let mut rng = ark_std::test_rng();
   |         ----^^^
   |         |
   |         help: remove this `mut`

warning: unused variable: `i`
   --> src/ramlookup/caulkplus.rs:488:13
    |
488 |         for i in 0..pp.g2_powers.len() {
    |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `i`
   --> src/ramlookup/caulkplus.rs:567:9
    |
567 |     for i in 0..pp.g2_powers.len() {
    |         ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `i`
   --> src/ramlookup/caulkplus.rs:602:9
    |
602 |     for i in 0..m {
    |         ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `i`
   --> src/ramlookup/caulkplus.rs:609:9
    |
609 |     for i in a_vec.len()..m {
    |         ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `rng`
   --> src/ramlookup/caulkplus.rs:635:13
    |
635 |     let mut rng = ark_std::test_rng();
    |             ^^^ help: if this is intentional, prefix it with an underscore: `_rng`

warning: variable does not need to be mutable
   --> src/ramlookup/caulkplus.rs:635:9
    |
635 |     let mut rng = ark_std::test_rng();
    |         ----^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/ramlookup/caulkplus.rs:636:9
    |
636 |     let mut i_vec = example.a_vec.clone();
    |         ----^^^^^
    |         |
    |         help: remove this `mut`

warning: variable does not need to be mutable
   --> src/ramlookup/caulkplus.rs:766:13
    |
766 |         let mut start = Instant::now();
    |             ----^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `z_i_poly`
   --> src/ramlookup/caulkplus.rs:803:50
    |
803 |         let (a_poly, v_poly, t_i_poly, l_i_poly, z_i_poly, h_poly) = (
    |                                                  ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_z_i_poly`

warning: variable does not need to be mutable
   --> src/ramlookup/caulkplus.rs:838:13
    |
838 |         let mut start = Instant::now();
    |             ----^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `i`
   --> src/ramlookup/caulkplus.rs:885:13
    |
885 |         for i in 0usize..1000 {
    |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `domain_size`
   --> src/ramlookup/fastupdate.rs:355:5
    |
355 |     domain_size: usize,
    |     ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_domain_size`

warning: unused variable: `i`
   --> src/ramlookup/fastupdate.rs:409:13
    |
409 |         for i in 0..i_set.len() {
    |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `i`
   --> src/ramlookup/fastupdate.rs:413:13
    |
413 |         for i in 0..k_set.len() {
    |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `evals_I`
   --> src/ramlookup/fastupdate.rs:464:13
    |
464 |         let evals_I = compute_reciprocal_sum(&t_j_vec, &k_set, &i_set, &h_domain, h_domain_size, &mut cache);
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_evals_I`

warning: unused variable: `evals_I_naive`
   --> src/ramlookup/fastupdate.rs:468:13
    |
468 |         let evals_I_naive = compute_reciprocal_sum_naive(&t_j_vec, &k_set, &i_set, &h_domain, h_domain_size);
    |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_evals_I_naive`

warning: variable does not need to be mutable
   --> src/ramlookup/fastupdate.rs:462:13
    |
462 |         let mut start = Instant::now();
    |             ----^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> src/ramlookup/fastupdate.rs:467:13
    |
467 |         let mut start = Instant::now();
    |             ----^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `i`
   --> src/ramlookup/cq.rs:197:13
    |
197 |         for i in 0..(k - m) {
    |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `i`
   --> src/ramlookup/cq.rs:206:13
    |
206 |         for i in 0..m {
    |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: variable does not need to be mutable
   --> src/ramlookup/cq.rs:238:13
    |
238 |         let mut i_set_vec: Vec<usize> = m_set.clone().into_iter().collect::<Vec<_>>();
    |             ----^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `i`
   --> src/ramlookup/cq.rs:314:13
    |
314 |         for i in 0..(k - m) {
    |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: variable does not need to be mutable
   --> src/ramlookup/cq.rs:343:13
    |
343 |         let mut i_set_vec: Vec<usize> = m_set.clone().into_iter().collect::<Vec<_>>();
    |             ----^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> src/ramlookup/cq.rs:459:13
    |
459 |         let mut i_set_vec: Vec<usize> = m_set.clone().into_iter().collect::<Vec<_>>();
    |             ----^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: variable does not need to be mutable
   --> src/ramlookup/cq.rs:698:9
    |
698 |     let mut start = Instant::now();
    |         ----^^^^^
    |         |
    |         help: remove this `mut`

warning: unused variable: `i`
    --> src/ramlookup/cq.rs:1345:13
     |
1345 |         for i in 0..pp.poly_ck.powers_of_g.len() {
     |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `g2`
    --> src/ramlookup/cq.rs:1349:13
     |
1349 |         let g2 = pp.g2_powers[0];
     |             ^^ help: if this is intentional, prefix it with an underscore: `_g2`

warning: unused variable: `i`
    --> src/ramlookup/cq.rs:1435:17
     |
1435 |             for i in 0..pp.poly_ck.powers_of_g.len() {
     |                 ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `o_bytes`
    --> src/ramlookup/cq.rs:1494:21
     |
1494 |             let mut o_bytes = Vec::<u8>::new();
     |                     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_o_bytes`

warning: unused variable: `h_domain_size`
    --> src/ramlookup/cq.rs:1469:33
     |
1469 | fn load_table_or_new(N: &usize, h_domain_size: &usize, path: &str) -> Vec<usize> {
     |                                 ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_h_domain_size`

warning: variable does not need to be mutable
    --> src/ramlookup/cq.rs:1494:17
     |
1494 |             let mut o_bytes = Vec::<u8>::new();
     |                 ----^^^^^^^
     |                 |
     |                 help: remove this `mut`

warning: variable does not need to be mutable
    --> src/ramlookup/cq.rs:1552:13
     |
1552 |         let mut base_table: Vec<usize> = load_table_or_new(&N, &h, &path);
     |             ----^^^^^^^^^^
     |             |
     |             help: remove this `mut`

warning: unused variable: `rng`
    --> src/ramlookup/cq.rs:1644:21
     |
1644 |             let mut rng = ark_std::test_rng();
     |                     ^^^ help: if this is intentional, prefix it with an underscore: `_rng`

warning: unused variable: `cq_pp`
    --> src/ramlookup/cq.rs:1666:17
     |
1666 |             let cq_pp: CqPublicParams<E> = CqPublicParams::load(_h_domain_size);
     |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_cq_pp`

warning: value assigned to `table_pp` is never read
    --> src/ramlookup/cq.rs:1697:21
     |
1697 |                     table_pp = CqProverInput::load_by_path(&table_pp_path)
     |                     ^^^^^^^^
     |
     = help: maybe it is overwritten before being read?

warning: variable does not need to be mutable
    --> src/ramlookup/cq.rs:1644:17
     |
1644 |             let mut rng = ark_std::test_rng();
     |                 ----^^^
     |                 |
     |                 help: remove this `mut`

warning: variable does not need to be mutable
    --> src/ramlookup/cq.rs:1675:17
     |
1675 |             let mut base_table: Vec<usize> = load_table_or_new(&N, &_h_domain_size, &path);
     |                 ----^^^^^^^^^^
     |                 |
     |                 help: remove this `mut`

warning: variable does not need to be mutable
    --> src/ramlookup/cq.rs:1685:17
     |
1685 |             let mut start = Instant::now();
     |                 ----^^^^^
     |                 |
     |                 help: remove this `mut`

warning: unused variable: `cq_pp`
    --> src/ramlookup/cq.rs:1735:21
     |
1735 |                 let cq_pp: CqPublicParams<E> = CqPublicParams::new(&pp, log_table_sizes[i], false);
     |                     ^^^^^ help: if this is intentional, prefix it with an underscore: `_cq_pp`

warning: unused variable: `table_pp`
    --> src/ramlookup/cq.rs:1772:21
     |
1772 |                 let table_pp =
     |                     ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_table_pp`

warning: unused variable: `pos`
    --> src/ramlookup/cq.rs:1892:29
     |
1892 |                         let pos = f_vec.push(
     |                             ^^^ help: if this is intentional, prefix it with an underscore: `_pos`

warning: unused variable: `proof`
    --> src/ramlookup/cq.rs:1950:25
     |
1950 |                     let proof = compute_cq_proof::<E>(
     |                         ^^^^^ help: if this is intentional, prefix it with an underscore: `_proof`

warning: value assigned to `prev_lookup_time` is never read
    --> src/ramlookup/cq.rs:1963:29
     |
1963 |                     let mut prev_lookup_time = 0.0 as f64;
     |                             ^^^^^^^^^^^^^^^^
     |
     = help: maybe it is overwritten before being read?

warning: variable does not need to be mutable
    --> src/ramlookup/cq.rs:2059:13
     |
2059 |         let mut base_table: Vec<usize> = load_table_or_new(&N, &_h_domain_size, &path);
     |             ----^^^^^^^^^^
     |             |
     |             help: remove this `mut`

warning: variable does not need to be mutable
    --> src/ramlookup/cq.rs:2130:17
     |
2130 |             let mut timer_tcom = Instant::now();
     |                 ----^^^^^^^^^^
     |                 |
     |                 help: remove this `mut`

warning: unused variable: `g1x`
    --> src/ramlookup/cq.rs:2239:13
     |
2239 |         let g1x = pp.poly_ck.powers_of_g[1];
     |             ^^^ help: if this is intentional, prefix it with an underscore: `_g1x`

warning: unused variable: `i`
    --> src/ramlookup/cq.rs:2243:13
     |
2243 |         for i in 0usize..1000 {
     |             ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: variable does not need to be mutable
    --> src/ramlookup/cq.rs:2292:13
     |
2292 |         let mut start = Instant::now();
     |             ----^^^^^
     |             |
     |             help: remove this `mut`

warning: unused variable: `i`
  --> src/ramlookup/mod.rs:67:9
   |
67 |     for i in 0..vec_size {
   |         ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: value assigned to `proof` is never read
   --> src/ramlookup/mod.rs:320:13
    |
320 |     let mut proof: Option<ProofConcat<E>> = None;
    |             ^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: unused variable: `g_com`
   --> src/ramlookup/mod.rs:412:9
    |
412 |     let g_com = KZGCommit::commit_g1(&pp.poly_ck, &g_poly);
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_g_com`

warning: value assigned to `status` is never read
   --> src/ramlookup/mod.rs:447:13
    |
447 |     let mut status: bool = false;
    |             ^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: unused variable: `m_domain`
   --> src/ramlookup/mod.rs:553:13
    |
553 |         let m_domain = GeneralEvaluationDomain::<E::Fr>::new(m).unwrap();
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_m_domain`

warning: unused variable: `pp`
   --> src/ramlookup/mod.rs:750:5
    |
750 |     pp: &PublicParameters<E>
    |     ^^ help: if this is intentional, prefix it with an underscore: `_pp`

warning: unused variable: `m_domain`
   --> src/ramlookup/mod.rs:852:9
    |
852 |     let m_domain: GeneralEvaluationDomain<E::Fr> = GeneralEvaluationDomain::new(m).unwrap();
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_m_domain`

warning: unused variable: `val_s`
   --> src/ramlookup/mod.rs:964:10
    |
964 |     let (val_s, proof_s) = KZGCommit::<E>::open_g1_batch(
    |          ^^^^^ help: if this is intentional, prefix it with an underscore: `_val_s`

warning: unused variable: `val_ws`
   --> src/ramlookup/mod.rs:971:10
    |
971 |     let (val_ws, proof_ws) = KZGCommit::<E>::open_g1_batch(
    |          ^^^^^^ help: if this is intentional, prefix it with an underscore: `_val_ws`

warning: unused variable: `k_domain_size`
    --> src/ramlookup/mod.rs:1130:13
     |
1130 |         let k_domain_size: usize = 9;
     |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_k_domain_size`

warning: unused variable: `proof`
    --> src/ramlookup/mod.rs:1149:13
     |
1149 |         let proof = compute_monotonic_proof::<E>(
     |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_proof`

warning: variable does not need to be mutable
    --> src/ramlookup/mod.rs:1148:13
     |
1148 |         let mut start = Instant::now();
     |             ----^^^^^
     |             |
     |             help: remove this `mut`

warning: unused variable: `rng`
    --> src/ramlookup/mod.rs:1161:17
     |
1161 |         let mut rng = ark_std::test_rng();
     |                 ^^^ help: if this is intentional, prefix it with an underscore: `_rng`

warning: unused variable: `n_domain_size`
    --> src/ramlookup/mod.rs:1165:13
     |
1165 |         let n_domain_size: usize = 0;
     |             ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_n_domain_size`

warning: unused variable: `k`
    --> src/ramlookup/mod.rs:1169:13
     |
1169 |         let k: usize = 1 << k_domain_size;
     |             ^ help: if this is intentional, prefix it with an underscore: `_k`

warning: variable does not need to be mutable
    --> src/ramlookup/mod.rs:1161:13
     |
1161 |         let mut rng = ark_std::test_rng();
     |             ----^^^
     |             |
     |             help: remove this `mut`

warning: value assigned to `cost` is never read
    --> src/ramlookup/mod.rs:1270:17
     |
1270 |         let mut cost: f64 = 0.0;
     |                 ^^^^
     |
     = help: maybe it is overwritten before being read?

warning: unused variable: `j`
    --> src/ramlookup/mod.rs:1278:17
     |
1278 |             for j in 0..depth {
     |                 ^ help: if this is intentional, prefix it with an underscore: `_j`

warning: struct `CommittedRAM` is never constructed
  --> src/ramlookup/mod.rs:30:12
   |
30 | pub struct CommittedRAM<E: PairingEngine> {
   |            ^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: struct `OperationBatch` is never constructed
  --> src/ramlookup/mod.rs:35:12
   |
35 | pub struct OperationBatch<E: PairingEngine> {
   |            ^^^^^^^^^^^^^^

warning: struct `ProverInputCommon` is never constructed
   --> src/ramlookup/mod.rs:165:12
    |
165 | pub struct ProverInputCommon<E: PairingEngine> {
    |            ^^^^^^^^^^^^^^^^^

warning: struct `VerifierInputCommon` is never constructed
   --> src/ramlookup/mod.rs:175:12
    |
175 | pub struct VerifierInputCommon<E: PairingEngine> {
    |            ^^^^^^^^^^^^^^^^^^^

warning: multiple fields are never read
   --> src/ramlookup/mod.rs:527:9
    |
526 | pub struct MonotonicTranscriptExample<E: PairingEngine> {
    |            -------------------------- fields in this struct
527 |     pub a_vec: Vec<usize>,
    |         ^^^^^
528 |     pub v_vec: Vec<usize>,
    |         ^^^^^
529 |     pub a_dash_vec: Vec<usize>,
    |         ^^^^^^^^^^
530 |     pub v_dash_vec: Vec<usize>,
    |         ^^^^^^^^^^
531 |     pub op_vec: Vec<usize>,
    |         ^^^^^^
532 |     pub a_bar_vec: Vec<usize>,
    |         ^^^^^^^^^
533 |     pub v_bar_vec: Vec<usize>,
    |         ^^^^^^^^^
...
538 |     pub tr: RAMTranscript<E>,
    |         ^^
...
541 |     pub addr_tr_com: RAMTranscriptCom<E>,
    |         ^^^^^^^^^^^
542 |     pub m_domain_size: usize,
543 |     pub h_domain_size: usize,
    |         ^^^^^^^^^^^^^

warning: multiple fields are never read
   --> src/ramlookup/mod.rs:703:9
    |
702 | pub struct ProofMonotonic<E: PairingEngine> {
    |            -------------- fields in this struct
703 |     pub z1_com: E::G1Affine,
    |         ^^^^^^
704 |     pub z2_com: E::G1Affine,
    |         ^^^^^^
705 |     pub delta_A_com: E::G1Affine,
    |         ^^^^^^^^^^^
706 |     pub delta_T_com: E::G1Affine,
    |         ^^^^^^^^^^^
707 |     pub q1_com: E::G1Affine,
    |         ^^^^^^
708 |     pub q2_com: E::G1Affine,
    |         ^^^^^^
709 |
710 |     pub val_A_s: E::Fr,
    |         ^^^^^^^
711 |     pub val_A_ws: E::Fr,
    |         ^^^^^^^^
712 |     pub val_deltaA_s: E::Fr,
    |         ^^^^^^^^^^^^
713 |     pub val_deltaT_s: E::Fr,
    |         ^^^^^^^^^^^^
714 |     pub val_T_s: E::Fr,
    |         ^^^^^^^
715 |     pub val_T_ws: E::Fr,
    |         ^^^^^^^^
716 |     pub val_op_ws: E::Fr,
    |         ^^^^^^^^^
717 |     pub val_V_s: E::Fr,
    |         ^^^^^^^
718 |     pub val_V_ws: E::Fr,
    |         ^^^^^^^^
719 |     pub val_Q1_s: E::Fr,
    |         ^^^^^^^^
720 |     pub val_Q2_s: E::Fr,
    |         ^^^^^^^^
721 |     pub val_Z1_s: E::Fr,
    |         ^^^^^^^^
722 |     pub val_Z2_s: E::Fr,
    |         ^^^^^^^^
723 |
724 |     pub pi_s: E::G1Affine,
    |         ^^^^
725 |     pub pi_ws: E::G1Affine,
    |         ^^^^^
726 |
727 |     pub range_proof_A: CqProof<E>,
    |         ^^^^^^^^^^^^^
728 |     pub range_proof_deltaA: CqProof<E>,
    |         ^^^^^^^^^^^^^^^^^^
729 |     pub range_proof_deltaT: CqProof<E>,
    |         ^^^^^^^^^^^^^^^^^^
730 |     pub range_proof_t: CqProof<E>
    |         ^^^^^^^^^^^^^

warning: fields `set_I1` and `set_I2` are never read
   --> src/ramlookup/mod.rs:735:9
    |
734 | pub struct ProofMonotonicProverInput<E: PairingEngine> {
    |            ------------------------- fields in this struct
735 |     pub set_I1: Vec<usize>,
    |         ^^^^^^
736 |     pub set_I2: Vec<usize>,
    |         ^^^^^^

warning: field `t_poly` is never read
  --> src/ramlookup/caulkplus.rs:32:9
   |
30 | pub struct CaulkPlusProverInput<E: PairingEngine> {
   |            -------------------- field in this struct
31 |     pub t_com: E::G1Affine,                          // commitment to table
32 |     pub t_poly: DensePolynomial<E::Fr>,             // polynomial interpolating the table on h_domain
   |         ^^^^^^

warning: method `store` is never used
   --> src/ramlookup/caulkplus.rs:284:12
    |
282 | impl<E: PairingEngine> CaulkPlusProverInput<E> {
    | ---------------------------------------------- method in this implementation
283 |     // store the prover input in a file
284 |     pub fn store(&self, h_domain_size: usize) {
    |            ^^^^^

warning: associated function `new` is never used
   --> src/ramlookup/caulkplus.rs:412:12
    |
323 | impl<E: PairingEngine> CaulkPlusPublicParams<E> {
    | ----------------------------------------------- associated function in this implementation
...
412 |     pub fn new(
    |            ^^^

warning: field `zk_dvt_poly` is never read
  --> src/ramlookup/fastupdate.rs:12:9
   |
8  | pub struct UpdateParamsSetK<F: PrimeField> {
   |            ---------------- field in this struct
...
12 |     pub zk_dvt_poly: DensePolynomial<F>,    // derivative of Z_K
   |         ^^^^^^^^^^^

warning: field `pi_h` is never read
   --> src/ramlookup/cq.rs:147:9
    |
135 | pub struct CqProof<E: PairingEngine> {
    |            ------- field in this struct
...
147 |     pub pi_h: E::G1Affine,    // evaluation proof for h(\gamma).
    |         ^^^^

warning: field `b_poly` is never read
   --> src/ramlookup/cq.rs:751:9
    |
747 | pub struct CqLookupInputRound2<E: PairingEngine> {
    |            ------------------- field in this struct
...
751 |     pub b_poly: DensePolynomial<E::Fr>,    // B polynomial interpolating 1/(beta + f_i)
    |         ^^^^^^

warning: field `h_poly` is never read
   --> src/ramlookup/cq.rs:763:9
    |
762 | pub struct CqLookupInputRound3<E: PairingEngine> {
    |            ------------------- field in this struct
763 |     pub h_poly: DensePolynomial<E::Fr>, // h = B0 + \eta f + \eta^2 Q_B
    |         ^^^^^^

warning: variable `rand_A_polys` should have a snake case name
   --> src/dft.rs:950:17
    |
950 |         let mut rand_A_polys: Vec<DensePolynomial<E::Fr>> = Vec::new();
    |                 ^^^^^^^^^^^^ help: convert the identifier to snake case: `rand_a_polys`
    |
    = note: `#[warn(non_snake_case)]` on by default

warning: variable `rand_B_polys` should have a snake case name
   --> src/dft.rs:951:17
    |
951 |         let mut rand_B_polys: Vec<DensePolynomial<E::Fr>> = Vec::new();
    |                 ^^^^^^^^^^^^ help: convert the identifier to snake case: `rand_b_polys`

warning: variable `rand_C_polys` should have a snake case name
   --> src/dft.rs:952:17
    |
952 |         let mut rand_C_polys: Vec<DensePolynomial<E::Fr>> = Vec::new();
    |                 ^^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `rand_c_polys`

warning: variable `fft_C` should have a snake case name
   --> src/dft.rs:981:17
    |
981 |         let mut fft_C: Vec<E::Fr> = Vec::with_capacity(1usize << 21);
    |                 ^^^^^ help: convert the identifier to snake case (notice the capitalization): `fft_c`

warning: variable `fft_A` should have a snake case name
   --> src/dft.rs:985:17
    |
985 |             let fft_A: Vec<E::Fr> = field_fft_domain(&rand_A_polys[i].coeffs, 21, &input_domain);
    |                 ^^^^^ help: convert the identifier to snake case: `fft_a`

warning: variable `fft_B` should have a snake case name
   --> src/dft.rs:986:17
    |
986 |             let fft_B: Vec<E::Fr> = field_fft_domain(&rand_B_polys[i].coeffs, 21, &input_domain);
    |                 ^^^^^ help: convert the identifier to snake case: `fft_b`

warning: variable `delta_A_poly` should have a snake case name
   --> src/ramlookup/mod.rs:112:5
    |
112 |     delta_A_poly: &DensePolynomial<E::Fr>,
    |     ^^^^^^^^^^^^ help: convert the identifier to snake case: `delta_a_poly`

warning: variable `delta_T_poly` should have a snake case name
   --> src/ramlookup/mod.rs:113:5
    |
113 |     delta_T_poly: &DensePolynomial<E::Fr>,
    |     ^^^^^^^^^^^^ help: convert the identifier to snake case: `delta_t_poly`

warning: variable `dA_poly` should have a snake case name
   --> src/ramlookup/mod.rs:120:9
    |
120 |     let dA_poly:DensePolynomial<E::Fr> = compute_shifted_difference::<E>(&a_poly, k_domain_size);
    |         ^^^^^^^ help: convert the identifier to snake case: `d_a_poly`

warning: variable `dT_poly` should have a snake case name
   --> src/ramlookup/mod.rs:121:9
    |
121 |     let dT_poly: DensePolynomial<E::Fr> = compute_shifted_difference::<E>(&t_poly, k_domain_size);
    |         ^^^^^^^ help: convert the identifier to snake case: `d_t_poly`

warning: variable `dV_poly` should have a snake case name
   --> src/ramlookup/mod.rs:122:9
    |
122 |     let dV_poly: DensePolynomial<E::Fr> = compute_shifted_difference::<E>(&v_poly, k_domain_size);
    |         ^^^^^^^ help: convert the identifier to snake case: `d_v_poly`

warning: variable `dOp_poly` should have a snake case name
   --> src/ramlookup/mod.rs:123:9
    |
123 |     let dOp_poly: DensePolynomial<E::Fr> = compute_shifted_difference::<E>(&op_poly, k_domain_size);
    |         ^^^^^^^^ help: convert the identifier to snake case: `d_op_poly`

warning: variable `dA_dash_poly` should have a snake case name
   --> src/ramlookup/mod.rs:126:9
    |
126 |     let dA_dash_poly:DensePolynomial<E::Fr> = dA_poly.sub(delta_A_poly);
    |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `d_a_dash_poly`

warning: variable `dT_dash_poly` should have a snake case name
   --> src/ramlookup/mod.rs:131:9
    |
131 |     let dT_dash_poly: DensePolynomial<E::Fr> = dT_poly.sub(delta_T_poly);
    |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `d_t_dash_poly`

warning: variable `op_dV_poly` should have a snake case name
   --> src/ramlookup/mod.rs:135:9
    |
135 |     let op_dV_poly: DensePolynomial<E::Fr> = &op_dash_poly * &dV_poly;
    |         ^^^^^^^^^^ help: convert the identifier to snake case: `op_d_v_poly`

warning: variable `op_dV_poly` should have a snake case name
   --> src/ramlookup/mod.rs:136:9
    |
136 |     let op_dV_poly = compute_scaled_polynomial::<E>(&op_dV_poly, gamma_sq);
    |         ^^^^^^^^^^ help: convert the identifier to snake case: `op_d_v_poly`

warning: variable `N_inv` should have a snake case name
   --> src/ramlookup/caulkplus.rs:447:13
    |
447 |         let N_inv = E::Fr::from(h_domain.size() as u128).inverse().unwrap();
    |             ^^^^^ help: convert the identifier to snake case: `n_inv`

warning: variable `N_inv` should have a snake case name
   --> src/ramlookup/caulkplus.rs:517:13
    |
517 |         let N_inv = E::Fr::from(h_domain.size() as u128).inverse().unwrap();
    |             ^^^^^ help: convert the identifier to snake case: `n_inv`

warning: variable `N` should have a snake case name
   --> src/ramlookup/caulkplus.rs:551:9
    |
551 |     let N: usize = t_vec.len();
    |         ^ help: convert the identifier to snake case: `n`

warning: constant `h_domain_size` should have an upper case name
   --> src/ramlookup/caulkplus.rs:703:11
    |
703 |     const h_domain_size: usize = 22;
    |           ^^^^^^^^^^^^^ help: convert the identifier to upper case: `H_DOMAIN_SIZE`
    |
    = note: `#[warn(non_upper_case_globals)]` on by default

warning: constant `m_domain_size` should have an upper case name
   --> src/ramlookup/caulkplus.rs:704:11
    |
704 |     const m_domain_size: usize = 11;
    |           ^^^^^^^^^^^^^ help: convert the identifier to upper case: `M_DOMAIN_SIZE`

warning: variable `N` should have a snake case name
   --> src/ramlookup/caulkplus.rs:733:13
    |
733 |         let N: usize = 1 << h_domain_size;
    |             ^ help: convert the identifier to snake case: `n`

warning: variable `N` should have a snake case name
   --> src/ramlookup/caulkplus.rs:788:13
    |
788 |         let N: usize = 1 << h_domain_size;
    |             ^ help: convert the identifier to snake case: `n`

warning: variable `N` should have a snake case name
   --> src/ramlookup/caulkplus.rs:827:13
    |
827 |         let N: usize = 1 << h_domain_size;
    |             ^ help: convert the identifier to snake case: `n`

warning: variable `N` should have a snake case name
   --> src/ramlookup/caulkplus.rs:868:13
    |
868 |         let N: usize = 1 << h_domain_size;
    |             ^ help: convert the identifier to snake case: `n`

warning: variable `N_inv` should have a snake case name
   --> src/ramlookup/caulkplus.rs:895:17
    |
895 |             let N_inv = E::Fr::from(N as u128).inverse().unwrap();
    |                 ^^^^^ help: convert the identifier to snake case: `n_inv`

warning: variable `N` should have a snake case name
  --> src/ramlookup/fastupdate.rs:66:13
   |
66 |         let N = 1usize << h_domain_size;
   |             ^ help: convert the identifier to snake case: `n`

warning: variable `field_N` should have a snake case name
  --> src/ramlookup/fastupdate.rs:67:13
   |
67 |         let field_N = F::from(N as u128);
   |             ^^^^^^^ help: convert the identifier to snake case: `field_n`

warning: variable `field_N1` should have a snake case name
  --> src/ramlookup/fastupdate.rs:68:13
   |
68 |         let field_N1 = F::from( ((N*(N-1))/2) as u128);
   |             ^^^^^^^^ help: convert the identifier to snake case: `field_n1`

warning: variable `z_I` should have a snake case name
   --> src/ramlookup/fastupdate.rs:194:9
    |
194 |     let z_I = compute_vanishing_poly::<F>(&h_i_vec, 1);
    |         ^^^ help: convert the identifier to snake case (notice the capitalization): `z_i`

warning: variable `z_I_dvt_evals_I` should have a snake case name
   --> src/ramlookup/fastupdate.rs:201:9
    |
201 |     let z_I_dvt_evals_I = fast_poly_evaluate(zi_dvt_coeffs.as_slice(), &h_i_vec);
    |         ^^^^^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `z_i_dvt_evals_i`

warning: variable `z_I_evals_K` should have a snake case name
   --> src/ramlookup/fastupdate.rs:205:9
    |
205 |     let z_I_evals_K = fast_poly_evaluate_with_pp(
    |         ^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `z_i_evals_k`

warning: variable `c_evals_K` should have a snake case name
   --> src/ramlookup/fastupdate.rs:232:9
    |
232 |     let c_evals_K = fast_poly_evaluate_with_pp(
    |         ^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `c_evals_k`

warning: variable `N` should have a snake case name
   --> src/ramlookup/fastupdate.rs:269:9
    |
269 |     let N = domain.size();
    |         ^ help: convert the identifier to snake case: `n`

warning: variable `q_evals_K` should have a snake case name
   --> src/ramlookup/fastupdate.rs:284:13
    |
284 |     let mut q_evals_K: Vec<F> = Vec::new();
    |             ^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `q_evals_k`

warning: variable `q_dvt_evals_K` should have a snake case name
   --> src/ramlookup/fastupdate.rs:314:9
    |
314 |     let q_dvt_evals_K = fast_poly_evaluate(q_poly_dvt_coeffs.as_slice(), h_i_vec.as_slice());
    |         ^^^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `q_dvt_evals_k`

warning: variable `p_dvt_evals_I` should have a snake case name
   --> src/ramlookup/fastupdate.rs:318:13
    |
318 |     let mut p_dvt_evals_I: Vec<F> = Vec::new();
    |             ^^^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `p_dvt_evals_i`

warning: variable `fN` should have a snake case name
   --> src/ramlookup/fastupdate.rs:325:9
    |
325 |     let fN = F::from(N as u128);
    |         ^^ help: convert the identifier to snake case: `f_n`

warning: variable `fN1` should have a snake case name
   --> src/ramlookup/fastupdate.rs:326:9
    |
326 |     let fN1 = F::from((N-1) as u128).div(F::from(2u128));
    |         ^^^ help: convert the identifier to snake case: `f_n1`

warning: variable `e_evals_I` should have a snake case name
   --> src/ramlookup/fastupdate.rs:327:13
    |
327 |     let mut e_evals_I: Vec<F> = Vec::new();
    |             ^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `e_evals_i`

warning: variable `e_evals_I` should have a snake case name
   --> src/ramlookup/fastupdate.rs:358:13
    |
358 |     let mut e_evals_I: Vec<F> = Vec::new();
    |             ^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `e_evals_i`

warning: variable `evals_I` should have a snake case name
   --> src/ramlookup/fastupdate.rs:464:13
    |
464 |         let evals_I = compute_reciprocal_sum(&t_j_vec, &k_set, &i_set, &h_domain, h_domain_size, &mut cache);
    |             ^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `evals_i`

warning: variable `evals_I_naive` should have a snake case name
   --> src/ramlookup/fastupdate.rs:468:13
    |
468 |         let evals_I_naive = compute_reciprocal_sum_naive(&t_j_vec, &k_set, &i_set, &h_domain, h_domain_size);
    |             ^^^^^^^^^^^^^ help: convert the identifier to snake case (notice the capitalization): `evals_i_naive`

warning: variable `N` should have a snake case name
   --> src/ramlookup/cq.rs:671:9
    |
671 |     let N: usize = 1usize << h_domain_size;
    |         ^ help: convert the identifier to snake case: `n`

warning: structure field `sparse_A_vec` should have a snake case name
   --> src/ramlookup/cq.rs:748:9
    |
748 |     pub sparse_A_vec: Vec<(usize, E::Fr)>, // sparse A polynomial
    |         ^^^^^^^^^^^^ help: convert the identifier to snake case: `sparse_a_vec`

warning: variable `N` should have a snake case name
   --> src/ramlookup/cq.rs:781:9
    |
781 |     let N = domain.size();
    |         ^ help: convert the identifier to snake case: `n`

warning: variable `N` should have a snake case name
   --> src/ramlookup/cq.rs:865:9
    |
865 |     let N = h_domain.size();
    |         ^ help: convert the identifier to snake case: `n`

warning: variable `N_inv` should have a snake case name
    --> src/ramlookup/cq.rs:1299:21
     |
1299 |                 let N_inv = E::Fr::from(h_domain.size() as u128).inverse().unwrap();
     |                     ^^^^^ help: convert the identifier to snake case: `n_inv`

warning: variable `N_inv` should have a snake case name
    --> src/ramlookup/cq.rs:1375:13
     |
1375 |         let N_inv = E::Fr::from(h_domain.size() as u128).inverse().unwrap();
     |             ^^^^^ help: convert the identifier to snake case: `n_inv`

warning: variable `N` should have a snake case name
    --> src/ramlookup/cq.rs:1412:9
     |
1412 |     let N: usize = t_vec.len();
     |         ^ help: convert the identifier to snake case: `n`

warning: variable `N` should have a snake case name
    --> src/ramlookup/cq.rs:1469:22
     |
1469 | fn load_table_or_new(N: &usize, h_domain_size: &usize, path: &str) -> Vec<usize> {
     |                      ^ help: convert the identifier to snake case: `n`

warning: call to `.clone()` on a reference in this situation does nothing
    --> src/ramlookup/cq.rs:1471:30
     |
1471 |     let res = File::open(path.clone());
     |                              ^^^^^^^^ help: remove this redundant call
     |
     = note: the type `str` does not implement `Clone`, so calling `clone` on `&str` copies the reference, which does not do anything and can be removed
     = note: `#[warn(noop_method_call)]` on by default

warning: constant `h_domain_size` should have an upper case name
    --> src/ramlookup/cq.rs:1518:11
     |
1518 |     const h_domain_size: usize = 18;
     |           ^^^^^^^^^^^^^ help: convert the identifier to upper case: `H_DOMAIN_SIZE`

warning: constant `m_domain_size` should have an upper case name
    --> src/ramlookup/cq.rs:1519:11
     |
1519 |     const m_domain_size: usize = 10;
     |           ^^^^^^^^^^^^^ help: convert the identifier to upper case: `M_DOMAIN_SIZE`

warning: constant `k_domain_size` should have an upper case name
    --> src/ramlookup/cq.rs:1520:11
     |
1520 |     const k_domain_size: usize = 0;
     |           ^^^^^^^^^^^^^ help: convert the identifier to upper case: `K_DOMAIN_SIZE`

warning: variable `N` should have a snake case name
    --> src/ramlookup/cq.rs:1550:13
     |
1550 |         let N: usize = 1usize << h;
     |             ^ help: convert the identifier to snake case: `n`

warning: variable `N` should have a snake case name
    --> src/ramlookup/cq.rs:1583:17
     |
1583 |             let N = 1usize << h_domain_sizes[i];
     |                 ^ help: convert the identifier to snake case: `n`

warning: variable `N` should have a snake case name
    --> src/ramlookup/cq.rs:1641:17
     |
1641 |             let N: usize = 1usize << h_domain_sizes[i];
     |                 ^ help: convert the identifier to snake case: `n`

warning: variable `N` should have a snake case name
    --> src/ramlookup/cq.rs:2004:13
     |
2004 |         let N: usize = 1usize << _h_domain_size;
     |             ^ help: convert the identifier to snake case: `n`

warning: variable `K` should have a snake case name
    --> src/ramlookup/cq.rs:2095:21
     |
2095 |             let mut K = 1usize << log_k;
     |                     ^ help: convert the identifier to snake case (notice the capitalization): `k`

warning: variable `N` should have a snake case name
    --> src/ramlookup/cq.rs:2170:13
     |
2170 |         let N = 1usize << h_domain_size;
     |             ^ help: convert the identifier to snake case: `n`

warning: variable `N` should have a snake case name
    --> src/ramlookup/cq.rs:2224:13
     |
2224 |         let N: usize = 1 << h_domain_size;
     |             ^ help: convert the identifier to snake case: `n`

warning: variable `N_inv` should have a snake case name
    --> src/ramlookup/cq.rs:2266:17
     |
2266 |             let N_inv = E::Fr::from(N as u128).inverse().unwrap();
     |                 ^^^^^ help: convert the identifier to snake case: `n_inv`

warning: variable `N` should have a snake case name
    --> src/ramlookup/cq.rs:2281:13
     |
2281 |         let N: usize = 1 << h_domain_size;
     |             ^ help: convert the identifier to snake case: `n`

warning: variable `N` should have a snake case name
    --> src/ramlookup/mod.rs:1132:13
     |
1132 |         let N: usize = 1 << h_domain_size;
     |             ^ help: convert the identifier to snake case: `n`

warning: `caulk` (lib test) generated 230 warnings (run `cargo fix --lib -p caulk --tests` to apply 71 suggestions)
    Finished `release` profile [optimized] target(s) in 0.07s
     Running unittests src/lib.rs (target/release/deps/caulk-5761a1506561317d)

running 1 test
Running setup for table size 65536 and batch size 1024
time to setup powers = 6.774166004s
dummy pp setup takes 7 seconds
dummy table init takes 0 seconds
Time to generate example for delta = 0 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=65536 and batch=1024 and delta=0: 0.023112686 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=65536 and batch=1024 is 0.023112686 secs
Time to generate example for delta = 1024 is 0 secs
Time to commit t_com (excluded from lookup time) in 25ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 213 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 379 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 51 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 113 msec
Time for divisions = 0
Evaluating C(X) over K took 119 msec
Scalar computation took 1060 msec
MSM took 50 msecs
Proof Generation Time for table=65536 and batch=1024 and delta=1024: 1.3303209200000001 secs
===> Average (finish at delta=1024) lookup time (without table init time) for table=65536 and batch=1024 is 0.676716803 secs
Time to generate example for delta = 2048 is 0 secs
Time to commit t_com (excluded from lookup time) in 46ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 204 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 725 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 52 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 150 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 118 msec
Time for divisions = 0
Evaluating C(X) over K took 272 msec
Scalar computation took 1733 msec
MSM took 69 msecs
Proof Generation Time for table=65536 and batch=1024 and delta=2048: 2.023689713 secs
===> Average (finish at delta=2048) lookup time (without table init time) for table=65536 and batch=1024 is 1.263532158875 secs
Time to generate example for delta = 4096 is 0 secs
Time to commit t_com (excluded from lookup time) in 92ms
Committed f_com in 34ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 218 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1557 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 54 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 362 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 118 msec
Time for divisions = 0
Evaluating C(X) over K took 587 msec
Scalar computation took 3276 msec
MSM took 129 msecs
Proof Generation Time for table=65536 and batch=1024 and delta=4096: 3.64687452 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=65536 and batch=1024 is 2.150856188125 secs
Time to generate example for delta = 8192 is 0 secs
Time to commit t_com (excluded from lookup time) in 155ms
Committed f_com in 34ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 221 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3262 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 54 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 773 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 123 msec
Time for divisions = 1
Evaluating C(X) over K took 1213 msec
Scalar computation took 6353 msec
MSM took 238 msecs
Proof Generation Time for table=65536 and batch=1024 and delta=8192: 6.851013111 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=65536 and batch=1024 is 3.8000293327812495 secs
Time to generate example for delta = 16384 is 0 secs
Time to commit t_com (excluded from lookup time) in 269ms
Committed f_com in 34ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 227 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 7005 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 53 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1548 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 125 msec
Time for divisions = 2
Evaluating C(X) over K took 2400 msec
Scalar computation took 12678 msec
MSM took 414 msecs
Proof Generation Time for table=65536 and batch=1024 and delta=16384: 13.379874309 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=65536 and batch=1024 is 7.059749977609375 secs
Time to generate example for delta = 32768 is 0 secs
Time to commit t_com (excluded from lookup time) in 503ms
Committed f_com in 33ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 226 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 14647 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 52 msec
Time for divisions = 3
Evaluating Z_I(X) over K took 3094 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 127 msec
Time for divisions = 4
Evaluating C(X) over K took 4877 msec
test ramlookup::cq::tests::test_delta_lookup has been running for over 60 seconds
Scalar computation took 25623 msec
MSM took 655 msecs
Proof Generation Time for table=65536 and batch=1024 and delta=32768: 26.616630434 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=65536 and batch=1024 is 13.632413331781247 secs
Running setup for table size 131072 and batch size 1024
time to setup powers = 12.971639676s
dummy pp setup takes 13 seconds
dummy table init takes 0 seconds
Time to generate example for delta = 0 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=131072 and batch=1024 and delta=0: 0.021404598 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=131072 and batch=1024 is 0.021404598 secs
Time to generate example for delta = 1024 is 0 secs
Time to commit t_com (excluded from lookup time) in 26ms
Committed f_com in 33ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 200 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 387 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 53 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 52 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 107 msec
Time for divisions = 0
Evaluating C(X) over K took 113 msec
Scalar computation took 1043 msec
MSM took 48 msecs
Proof Generation Time for table=131072 and batch=1024 and delta=1024: 1.309701291 secs
===> Average (finish at delta=1024) lookup time (without table init time) for table=131072 and batch=1024 is 0.6655529445 secs
Time to generate example for delta = 2048 is 0 secs
Time to commit t_com (excluded from lookup time) in 47ms
Committed f_com in 33ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 204 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 727 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 151 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 107 msec
Time for divisions = 0
Evaluating C(X) over K took 265 msec
Scalar computation took 1715 msec
MSM took 68 msecs
Proof Generation Time for table=131072 and batch=1024 and delta=2048: 2.006253772 secs
===> Average (finish at delta=2048) lookup time (without table init time) for table=131072 and batch=1024 is 1.248834298125 secs
Time to generate example for delta = 4096 is 0 secs
Time to commit t_com (excluded from lookup time) in 86ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 201 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1456 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 342 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 109 msec
Time for divisions = 0
Evaluating C(X) over K took 555 msec
Scalar computation took 3077 msec
MSM took 122 msecs
Proof Generation Time for table=131072 and batch=1024 and delta=4096: 3.425116916 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=131072 and batch=1024 is 2.0709387675625 secs
Time to generate example for delta = 8192 is 0 secs
Time to commit t_com (excluded from lookup time) in 145ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 207 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3119 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 728 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 114 msec
Time for divisions = 1
Evaluating C(X) over K took 1149 msec
Scalar computation took 6044 msec
MSM took 225 msecs
Proof Generation Time for table=131072 and batch=1024 and delta=8192: 6.50733358 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=131072 and batch=1024 is 3.6149012785312498 secs
Time to generate example for delta = 16384 is 0 secs
Time to commit t_com (excluded from lookup time) in 251ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 210 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 7037 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1508 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 121 msec
Time for divisions = 2
Evaluating C(X) over K took 2363 msec
Scalar computation took 12595 msec
MSM took 409 msecs
Proof Generation Time for table=131072 and batch=1024 and delta=16384: 13.265277293 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=131072 and batch=1024 is 6.85619622803125 secs
Time to generate example for delta = 32768 is 0 secs
Time to commit t_com (excluded from lookup time) in 506ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 215 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15114 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 3
Evaluating Z_I(X) over K took 3111 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 125 msec
Time for divisions = 4
Evaluating C(X) over K took 4824 msec
Scalar computation took 26038 msec
MSM took 652 msecs
Proof Generation Time for table=131072 and batch=1024 and delta=32768: 26.998639548 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=131072 and batch=1024 is 13.601369216882812 secs
Time to generate example for delta = 65536 is 0 secs
Time to commit t_com (excluded from lookup time) in 872ms
Committed f_com in 33ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 226 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 2 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 31893 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 6
Evaluating Z_I(X) over K took 6155 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 128 msec
Time for divisions = 9
Evaluating C(X) over K took 9673 msec
Scalar computation took 53276 msec
MSM took 1240 msecs
Proof Generation Time for table=131072 and batch=1024 and delta=65536: 54.910637501 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=131072 and batch=1024 is 27.38703511269531 secs
Running setup for table size 262144 and batch size 1024
time to setup powers = 24.247273006s
dummy pp setup takes 24 seconds
dummy table init takes 0 seconds
Time to generate example for delta = 0 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=262144 and batch=1024 and delta=0: 0.024298275 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=262144 and batch=1024 is 0.024298275 secs
Time to generate example for delta = 1024 is 0 secs
Time to commit t_com (excluded from lookup time) in 25ms
Committed f_com in 33ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 210 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 386 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 53 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 53 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 109 msec
Time for divisions = 0
Evaluating C(X) over K took 114 msec
Scalar computation took 1055 msec
MSM took 48 msecs
Proof Generation Time for table=262144 and batch=1024 and delta=1024: 1.3217014919999999 secs
===> Average (finish at delta=1024) lookup time (without table init time) for table=262144 and batch=1024 is 0.6729998835 secs
Time to generate example for delta = 2048 is 0 secs
Time to commit t_com (excluded from lookup time) in 48ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 199 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 714 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 53 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 149 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 107 msec
Time for divisions = 0
Evaluating C(X) over K took 267 msec
Scalar computation took 1701 msec
MSM took 67 msecs
Proof Generation Time for table=262144 and batch=1024 and delta=2048: 1.986843857 secs
===> Average (finish at delta=2048) lookup time (without table init time) for table=262144 and batch=1024 is 1.246779074625 secs
Time to generate example for delta = 4096 is 0 secs
Time to commit t_com (excluded from lookup time) in 91ms
Committed f_com in 34ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 214 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1549 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 54 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 358 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 115 msec
Time for divisions = 0
Evaluating C(X) over K took 590 msec
Scalar computation took 3254 msec
MSM took 128 msecs
Proof Generation Time for table=262144 and batch=1024 and delta=4096: 3.616258358 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=262144 and batch=1024 is 2.126003497375 secs
Time to generate example for delta = 8192 is 0 secs
Time to commit t_com (excluded from lookup time) in 154ms
Committed f_com in 34ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 216 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3215 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 52 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 740 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 115 msec
Time for divisions = 1
Evaluating C(X) over K took 1173 msec
Scalar computation took 6202 msec
MSM took 230 msecs
Proof Generation Time for table=262144 and batch=1024 and delta=8192: 6.676460205 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=262144 and batch=1024 is 3.7318126971562497 secs
Time to generate example for delta = 16384 is 0 secs
Time to commit t_com (excluded from lookup time) in 259ms
Committed f_com in 33ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 212 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 6925 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 54 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1528 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 115 msec
Time for divisions = 2
Evaluating C(X) over K took 2375 msec
Scalar computation took 12535 msec
MSM took 420 msecs
Proof Generation Time for table=262144 and batch=1024 and delta=16384: 13.214505612 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=262144 and batch=1024 is 6.940804762312501 secs
Time to generate example for delta = 32768 is 0 secs
Time to commit t_com (excluded from lookup time) in 508ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 216 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15249 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 54 msec
Time for divisions = 3
Evaluating Z_I(X) over K took 3230 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 124 msec
Time for divisions = 4
Evaluating C(X) over K took 4980 msec
Scalar computation took 26524 msec
MSM took 670 msecs
Proof Generation Time for table=262144 and batch=1024 and delta=32768: 27.489164442 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=262144 and batch=1024 is 13.757840666765624 secs
Time to generate example for delta = 65536 is 0 secs
Time to commit t_com (excluded from lookup time) in 845ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 217 msec
Time for divisions = 16
Computed update params in 21 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33688 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 54 msec
Time for divisions = 6
Evaluating Z_I(X) over K took 6396 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 125 msec
Time for divisions = 9
Evaluating C(X) over K took 9711 msec
Scalar computation took 55261 msec
MSM took 1205 msecs
Proof Generation Time for table=262144 and batch=1024 and delta=65536: 56.82232161 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=262144 and batch=1024 is 28.07137449157031 secs
Time to generate example for delta = 131072 is 0 secs
Time to commit t_com (excluded from lookup time) in 1536ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 226 msec
Time for divisions = 36
Computed update params in 46 secs
Time for sub-products = 0
Time for divisions = 4
Computed oracles on set I in 5 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 70339 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 12
Evaluating Z_I(X) over K took 12593 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 131 msec
Time for divisions = 19
Evaluating C(X) over K took 19316 msec
Scalar computation took 112911 msec
MSM took 2250 msecs
Proof Generation Time for table=262144 and batch=1024 and delta=131072: 115.656395946 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=262144 and batch=1024 is 57.27027693622266 secs
Running setup for table size 262144 and batch size 4096
time to setup powers = 24.495986195s
dummy pp setup takes 29 seconds
dummy table init takes 0 seconds
Time to generate example for delta = 0 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=262144 and batch=4096 and delta=0: 0.07279767 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=262144 and batch=4096 is 0.07279767 secs
Time to generate example for delta = 4096 is 0 secs
Time to commit t_com (excluded from lookup time) in 86ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1160 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2065 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 311 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 359 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 625 msec
Time for divisions = 0
Evaluating C(X) over K took 677 msec
Scalar computation took 6930 msec
MSM took 122 msecs
Proof Generation Time for table=262144 and batch=4096 and delta=4096: 7.774227787 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=262144 and batch=4096 is 3.9235127285 secs
Time to generate example for delta = 8192 is 0 secs
Time to commit t_com (excluded from lookup time) in 145ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1158 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3756 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 308 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1013 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 603 msec
Time for divisions = 1
Evaluating C(X) over K took 1452 msec
Scalar computation took 11105 msec
MSM took 225 msecs
Proof Generation Time for table=262144 and batch=4096 and delta=8192: 12.056948551 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=262144 and batch=4096 is 7.45489054425 secs
Time to generate example for delta = 16384 is 0 secs
Time to commit t_com (excluded from lookup time) in 252ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1157 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 1 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 7532 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 325 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2471 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 652 msec
Time for divisions = 3
Evaluating C(X) over K took 3186 msec
Scalar computation took 20542 msec
MSM took 437 msecs
Proof Generation Time for table=262144 and batch=4096 and delta=16384: 21.744143526 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=262144 and batch=4096 is 12.7831679773125 secs
Time to generate example for delta = 32768 is 0 secs
Time to commit t_com (excluded from lookup time) in 497ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1185 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15542 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 308 msec
Time for divisions = 5
Evaluating Z_I(X) over K took 5115 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 666 msec
Time for divisions = 6
Evaluating C(X) over K took 6267 msec
Scalar computation took 38697 msec
MSM took 643 msecs
Proof Generation Time for table=262144 and batch=4096 and delta=32768: 40.159757973 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=262144 and batch=4096 is 22.443047314875 secs
Time to generate example for delta = 65536 is 0 secs
Time to commit t_com (excluded from lookup time) in 878ms
Committed f_com in 112ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1214 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 5 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33728 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 316 msec
Time for divisions = 10
Evaluating Z_I(X) over K took 10404 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 680 msec
Time for divisions = 12
Evaluating C(X) over K took 12538 msec
Scalar computation took 77369 msec
MSM took 1245 msecs
Proof Generation Time for table=262144 and batch=4096 and delta=65536: 79.577567965 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=262144 and batch=4096 is 41.771758423062494 secs
Time to generate example for delta = 131072 is 0 secs
Time to commit t_com (excluded from lookup time) in 1541ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1209 msec
Time for divisions = 36
Computed update params in 46 secs
Time for sub-products = 0
Time for divisions = 4
Computed oracles on set I in 5 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 70790 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 324 msec
Time for divisions = 21
Evaluating Z_I(X) over K took 21644 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 667 msec
Time for divisions = 24
Evaluating C(X) over K took 25013 msec
Scalar computation took 156398 msec
MSM took 2316 msecs
Proof Generation Time for table=262144 and batch=4096 and delta=131072: 159.853704727 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=262144 and batch=4096 is 81.37085470298439 secs
Running setup for table size 524288 and batch size 1024
time to setup powers = 47.376356372s
dummy pp setup takes 48 seconds
dummy table init takes 0 seconds
Time to generate example for delta = 0 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=524288 and batch=1024 and delta=0: 0.022873344 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=524288 and batch=1024 is 0.022873344 secs
Time to generate example for delta = 1024 is 0 secs
Time to commit t_com (excluded from lookup time) in 26ms
Committed f_com in 33ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 200 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 378 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 52 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 51 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 101 msec
Time for divisions = 0
Evaluating C(X) over K took 106 msec
Scalar computation took 1017 msec
MSM took 47 msecs
Proof Generation Time for table=524288 and batch=1024 and delta=1024: 1.269685762 secs
===> Average (finish at delta=1024) lookup time (without table init time) for table=524288 and batch=1024 is 0.646279553 secs
Time to generate example for delta = 2048 is 0 secs
Time to commit t_com (excluded from lookup time) in 46ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 198 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 712 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 148 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 104 msec
Time for divisions = 0
Evaluating C(X) over K took 259 msec
Scalar computation took 1682 msec
MSM took 68 msecs
Proof Generation Time for table=524288 and batch=1024 and delta=2048: 1.962880335 secs
===> Average (finish at delta=2048) lookup time (without table init time) for table=524288 and batch=1024 is 1.217930622375 secs
Time to generate example for delta = 4096 is 0 secs
Time to commit t_com (excluded from lookup time) in 86ms
Committed f_com in 33ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 201 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1457 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 341 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 106 msec
Time for divisions = 0
Evaluating C(X) over K took 554 msec
Scalar computation took 3074 msec
MSM took 121 msecs
Proof Generation Time for table=524288 and batch=1024 and delta=4096: 3.4164019740000002 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=524288 and batch=1024 is 2.044630990875 secs
Time to generate example for delta = 8192 is 0 secs
Time to commit t_com (excluded from lookup time) in 145ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 202 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3139 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 752 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 116 msec
Time for divisions = 1
Evaluating C(X) over K took 1175 msec
Scalar computation took 6127 msec
MSM took 232 msecs
Proof Generation Time for table=524288 and batch=1024 and delta=8192: 6.592993685 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=524288 and batch=1024 is 3.62393290115625 secs
Time to generate example for delta = 16384 is 0 secs
Time to commit t_com (excluded from lookup time) in 265ms
Committed f_com in 34ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 217 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 6884 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1503 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 110 msec
Time for divisions = 2
Evaluating C(X) over K took 2333 msec
Scalar computation took 12403 msec
MSM took 408 msecs
Proof Generation Time for table=524288 and batch=1024 and delta=16384: 13.071672228 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=524288 and batch=1024 is 6.8293622810625 secs
Time to generate example for delta = 32768 is 0 secs
Time to commit t_com (excluded from lookup time) in 519ms
Committed f_com in 34ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 219 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15501 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 3
Evaluating Z_I(X) over K took 3055 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 114 msec
Time for divisions = 4
Evaluating C(X) over K took 4719 msec
Scalar computation took 26318 msec
MSM took 659 msecs
Proof Generation Time for table=524288 and batch=1024 and delta=32768: 27.274404544 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=524288 and batch=1024 is 13.612159179750012 secs
Time to generate example for delta = 65536 is 0 secs
Time to commit t_com (excluded from lookup time) in 842ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 210 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 5 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33170 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 6
Evaluating Z_I(X) over K took 6224 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 124 msec
Time for divisions = 9
Evaluating C(X) over K took 9569 msec
Scalar computation took 54401 msec
MSM took 1203 msecs
Proof Generation Time for table=524288 and batch=1024 and delta=65536: 55.951382957999996 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=524288 and batch=1024 is 27.72454591230469 secs
Time to generate example for delta = 131072 is 0 secs
Time to commit t_com (excluded from lookup time) in 1527ms
Committed f_com in 32ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 217 msec
Time for divisions = 38
Computed update params in 48 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 6 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 74898 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 12
Evaluating Z_I(X) over K took 12628 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 125 msec
Time for divisions = 19
Evaluating C(X) over K took 19519 msec
Scalar computation took 118015 msec
MSM took 2276 msecs
Proof Generation Time for table=524288 and batch=1024 and delta=131072: 120.77566746 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=524288 and batch=1024 is 58.17064549132031 secs
Time to generate example for delta = 262144 is 0 secs
Time to commit t_com (excluded from lookup time) in 3112ms
Committed f_com in 33ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 226 msec
Time for divisions = 82
Computed update params in 104 secs
Time for sub-products = 0
Time for divisions = 9
Computed oracles on set I in 11 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 156204 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 51 msec
Time for divisions = 25
Evaluating Z_I(X) over K took 25377 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 127 msec
Time for divisions = 38
Evaluating C(X) over K took 38370 msec
Scalar computation took 240850 msec
MSM took 3845 msecs
Proof Generation Time for table=524288 and batch=1024 and delta=262144: 245.460080953 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=524288 and batch=1024 is 120.76602197146192 secs
Running setup for table size 524288 and batch size 4096
time to setup powers = 47.675383791s
dummy pp setup takes 52 seconds
dummy table init takes 0 seconds
Time to generate example for delta = 0 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=524288 and batch=4096 and delta=0: 0.077661966 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=524288 and batch=4096 is 0.077661966 secs
Time to generate example for delta = 4096 is 0 secs
Time to commit t_com (excluded from lookup time) in 89ms
Committed f_com in 108ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1156 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2051 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 307 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 347 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 582 msec
Time for divisions = 0
Evaluating C(X) over K took 670 msec
Scalar computation took 6820 msec
MSM took 122 msecs
Proof Generation Time for table=524288 and batch=4096 and delta=4096: 7.66219594 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=524288 and batch=4096 is 3.869928953 secs
Time to generate example for delta = 8192 is 0 secs
Time to commit t_com (excluded from lookup time) in 145ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1135 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3670 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 307 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1011 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 588 msec
Time for divisions = 1
Evaluating C(X) over K took 1446 msec
Scalar computation took 11000 msec
MSM took 225 msecs
Proof Generation Time for table=524288 and batch=4096 and delta=8192: 11.944364154 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=524288 and batch=4096 is 7.371875526750001 secs
Time to generate example for delta = 16384 is 0 secs
Time to commit t_com (excluded from lookup time) in 253ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1146 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 1 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 7391 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 308 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2357 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 612 msec
Time for divisions = 3
Evaluating C(X) over K took 3080 msec
Scalar computation took 19977 msec
MSM took 410 msecs
Proof Generation Time for table=524288 and batch=4096 and delta=16384: 21.129497975 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=524288 and batch=4096 is 12.5284741594375 secs
Time to generate example for delta = 32768 is 0 secs
Time to commit t_com (excluded from lookup time) in 515ms
Committed f_com in 106ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1182 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15991 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 318 msec
Time for divisions = 5
Evaluating Z_I(X) over K took 5148 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 616 msec
Time for divisions = 6
Evaluating C(X) over K took 6112 msec
Scalar computation took 38860 msec
MSM took 637 msecs
Proof Generation Time for table=524288 and batch=4096 and delta=32768: 40.288920837 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=524288 and batch=4096 is 22.21757374715625 secs
Time to generate example for delta = 65536 is 0 secs
Time to commit t_com (excluded from lookup time) in 869ms
Committed f_com in 108ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1201 msec
Time for divisions = 15
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33469 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 316 msec
Time for divisions = 10
Evaluating Z_I(X) over K took 10640 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 645 msec
Time for divisions = 12
Evaluating C(X) over K took 12565 msec
Scalar computation took 77105 msec
MSM took 1276 msecs
Proof Generation Time for table=524288 and batch=4096 and delta=65536: 79.28092736 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=524288 and batch=4096 is 41.61049902475002 secs
Time to generate example for delta = 131072 is 0 secs
Time to commit t_com (excluded from lookup time) in 1598ms
Committed f_com in 110ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1256 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 7 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 74493 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 326 msec
Time for divisions = 21
Evaluating Z_I(X) over K took 21537 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 645 msec
Time for divisions = 25
Evaluating C(X) over K took 25079 msec
Scalar computation took 159725 msec
MSM took 2240 msecs
Proof Generation Time for table=524288 and batch=4096 and delta=131072: 163.037744267 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=524288 and batch=4096 is 82.03926755121094 secs
Time to generate example for delta = 262144 is 0 secs
Time to commit t_com (excluded from lookup time) in 3090ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1233 msec
Time for divisions = 82
Computed update params in 104 secs
Time for sub-products = 0
Time for divisions = 9
Computed oracles on set I in 11 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 156545 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 316 msec
Time for divisions = 43
Evaluating Z_I(X) over K took 43207 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 686 msec
Time for divisions = 50
Evaluating C(X) over K took 50849 msec
Scalar computation took 325080 msec
MSM took 3956 msecs
Proof Generation Time for table=524288 and batch=4096 and delta=262144: 330.445397073 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=524288 and batch=4096 is 165.04435525437893 secs
Running setup for table size 1048576 and batch size 4
time to setup powers = 89.844242604s
dummy pp setup takes 91 seconds
dummy table init takes 0 seconds
Time to generate example for delta = 0 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=1048576 and batch=4 and delta=0: 0.002896801 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=1048576 and batch=4 is 0.002896801 secs
Time to generate example for delta = 4 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 1 msec
MSM took 0 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=4: 0.005377108 secs
===> Average (finish at delta=4) lookup time (without table init time) for table=1048576 and batch=4 is 0.0041369545 secs
Time to generate example for delta = 8 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 1 msec
MSM took 1 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=8: 0.005923382 secs
===> Average (finish at delta=8) lookup time (without table init time) for table=1048576 and batch=4 is 0.004961884 secs
Time to generate example for delta = 16 is 0 secs
Time to commit t_com (excluded from lookup time) in 1ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 3 msec
MSM took 3 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=16: 0.009162114 secs
===> Average (finish at delta=16) lookup time (without table init time) for table=1048576 and batch=4 is 0.00645473675 secs
Time to generate example for delta = 32 is 0 secs
Time to commit t_com (excluded from lookup time) in 2ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 5 msec
MSM took 3 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=32: 0.012456418 secs
===> Average (finish at delta=32) lookup time (without table init time) for table=1048576 and batch=4 is 0.008734948375 secs
Time to generate example for delta = 64 is 0 secs
Time to commit t_com (excluded from lookup time) in 4ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 8 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 10 msec
MSM took 6 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=64: 0.020466783 secs
===> Average (finish at delta=64) lookup time (without table init time) for table=1048576 and batch=4 is 0.012723436390624999 secs
Time to generate example for delta = 128 is 0 secs
Time to commit t_com (excluded from lookup time) in 5ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 17 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 1 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 1 msec
Scalar computation took 22 msec
MSM took 11 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=128: 0.037512427 secs
===> Average (finish at delta=128) lookup time (without table init time) for table=1048576 and batch=4 is 0.0209896897890625 secs
Time to generate example for delta = 256 is 0 secs
Time to commit t_com (excluded from lookup time) in 9ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 41 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 2 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 2 msec
Scalar computation took 50 msec
MSM took 14 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=256: 0.068284937 secs
===> Average (finish at delta=256) lookup time (without table init time) for table=1048576 and batch=4 is 0.03706439101171875 secs
Time to generate example for delta = 512 is 0 secs
Time to commit t_com (excluded from lookup time) in 16ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 118 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 5 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 4 msec
Scalar computation took 135 msec
MSM took 26 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=512: 0.165603454 secs
===> Average (finish at delta=512) lookup time (without table init time) for table=1048576 and batch=4 is 0.07719436848437498 secs
Time to generate example for delta = 1024 is 0 secs
Time to commit t_com (excluded from lookup time) in 25ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 264 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 10 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 9 msec
Scalar computation took 297 msec
MSM took 47 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=1024: 0.349826695 secs
===> Average (finish at delta=1024) lookup time (without table init time) for table=1048576 and batch=4 is 0.16763462700097656 secs
Time to generate example for delta = 2048 is 0 secs
Time to commit t_com (excluded from lookup time) in 45ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 605 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 21 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 18 msec
Scalar computation took 672 msec
MSM took 67 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=2048: 0.747661832 secs
===> Average (finish at delta=2048) lookup time (without table init time) for table=1048576 and batch=4 is 0.3583837006884766 secs
Time to generate example for delta = 4096 is 0 secs
Time to commit t_com (excluded from lookup time) in 89ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1376 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 43 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 37 msec
Scalar computation took 1511 msec
MSM took 124 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=4096: 1.6470910920000001 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=1048576 and batch=4 is 0.7780996685659178 secs
Time to generate example for delta = 8192 is 0 secs
Time to commit t_com (excluded from lookup time) in 145ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2983 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 85 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 73 msec
Scalar computation took 3246 msec
MSM took 223 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=8192: 3.488426722 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=1048576 and batch=4 is 1.6731540601987296 secs
Time to generate example for delta = 16384 is 0 secs
Time to commit t_com (excluded from lookup time) in 251ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 6745 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 174 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 150 msec
Scalar computation took 7279 msec
MSM took 417 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=16384: 7.730909992 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=1048576 and batch=4 is 3.6416701492286374 secs
Time to generate example for delta = 32768 is 0 secs
Time to commit t_com (excluded from lookup time) in 497ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15014 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 350 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 301 msec
Scalar computation took 16086 msec
MSM took 647 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=32768: 16.797764874 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=1048576 and batch=4 is 7.953280489566528 secs
Time to generate example for delta = 65536 is 0 secs
Time to commit t_com (excluded from lookup time) in 869ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 16
Computed update params in 21 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 5 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33008 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 681 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 585 msec
Scalar computation took 35109 msec
MSM took 1230 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=65536: 36.468942964 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=1048576 and batch=4 is 17.293617362640347 secs
Time to generate example for delta = 131072 is 0 secs
Time to commit t_com (excluded from lookup time) in 1579ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 6 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 4
Evaluated q_dvt on I in 4 secs
Computing a_vec over K took 73402 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1363 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 1
Evaluating C(X) over K took 1170 msec
Scalar computation took 77591 msec
MSM took 2222 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=131072: 80.058245568 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=1048576 and batch=4 is 37.778938374307096 secs
Time to generate example for delta = 262144 is 0 secs
Time to commit t_com (excluded from lookup time) in 3281ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 83
Computed update params in 105 secs
Time for sub-products = 0
Time for divisions = 10
Computed oracles on set I in 14 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 161223 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2803 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 2
Evaluating C(X) over K took 2404 msec
Scalar computation took 169804 msec
MSM took 3821 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=262144: 174.134016573 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=1048576 and batch=4 is 82.43789359298997 secs
Time to generate example for delta = 524288 is 1 secs
Time to commit t_com (excluded from lookup time) in 6211ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 187
Computed update params in 234 secs
Time for sub-products = 0
Time for divisions = 19
Computed oracles on set I in 22 secs
Interpolated q polynomial in 59 secs
Time for sub-products = 0
Time for divisions = 24
Evaluated q_dvt on I in 24 secs
Computing a_vec over K took 344319 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 5
Evaluating Z_I(X) over K took 5540 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 4
Evaluating C(X) over K took 4806 msec
Scalar computation took 361492 msec
MSM took 7711 msecs
Proof Generation Time for table=1048576 and batch=4 and delta=524288: 370.22963801 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=1048576 and batch=4 is 177.31023446496042 secs
Running setup for table size 1048576 and batch size 16
time to setup powers = 90.425883224s
dummy pp setup takes 92 seconds
dummy table init takes 0 seconds
Time to generate example for delta = 0 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=1048576 and batch=16 and delta=0: 0.003031295 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=1048576 and batch=16 is 0.003031295 secs
Time to generate example for delta = 16 is 0 secs
Time to commit t_com (excluded from lookup time) in 1ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 6 msec
MSM took 3 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=16: 0.012663573 secs
===> Average (finish at delta=16) lookup time (without table init time) for table=1048576 and batch=16 is 0.007847434 secs
Time to generate example for delta = 32 is 0 secs
Time to commit t_com (excluded from lookup time) in 2ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 4 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 8 msec
MSM took 3 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=32: 0.015383434 secs
===> Average (finish at delta=32) lookup time (without table init time) for table=1048576 and batch=16 is 0.011275451375 secs
Time to generate example for delta = 64 is 0 secs
Time to commit t_com (excluded from lookup time) in 4ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 9 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 14 msec
MSM took 6 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=64: 0.024485302 secs
===> Average (finish at delta=64) lookup time (without table init time) for table=1048576 and batch=16 is 0.0161737764375 secs
Time to generate example for delta = 128 is 0 secs
Time to commit t_com (excluded from lookup time) in 5ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 19 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 1 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 1 msec
Scalar computation took 27 msec
MSM took 12 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=128: 0.04308558 secs
===> Average (finish at delta=128) lookup time (without table init time) for table=1048576 and batch=16 is 0.02556086740625 secs
Time to generate example for delta = 256 is 0 secs
Time to commit t_com (excluded from lookup time) in 9ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 42 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 3 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 3 msec
Scalar computation took 54 msec
MSM took 14 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=256: 0.072949174 secs
===> Average (finish at delta=256) lookup time (without table init time) for table=1048576 and batch=16 is 0.042255740859375 secs
Time to generate example for delta = 512 is 0 secs
Time to commit t_com (excluded from lookup time) in 18ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 119 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 6 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 6 msec
Scalar computation took 141 msec
MSM took 26 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=512: 0.172565722 secs
===> Average (finish at delta=512) lookup time (without table init time) for table=1048576 and batch=16 is 0.08328484871093748 secs
Time to generate example for delta = 1024 is 0 secs
Time to commit t_com (excluded from lookup time) in 26ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 281 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 13 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 13 msec
Scalar computation took 326 msec
MSM took 48 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=1024: 0.38107259 secs
===> Average (finish at delta=1024) lookup time (without table init time) for table=1048576 and batch=16 is 0.18086648230859376 secs
Time to generate example for delta = 2048 is 0 secs
Time to commit t_com (excluded from lookup time) in 45ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 600 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 25 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 24 msec
Scalar computation took 680 msec
MSM took 66 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=2048: 0.753907738 secs
===> Average (finish at delta=2048) lookup time (without table init time) for table=1048576 and batch=16 is 0.3749065168027344 secs
Time to generate example for delta = 4096 is 0 secs
Time to commit t_com (excluded from lookup time) in 87ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1343 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 51 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 49 msec
Scalar computation took 1502 msec
MSM took 126 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=4096: 1.639684916 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=1048576 and batch=16 is 0.7867164386767579 secs
Time to generate example for delta = 8192 is 0 secs
Time to commit t_com (excluded from lookup time) in 146ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2994 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 102 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 100 msec
Scalar computation took 3310 msec
MSM took 223 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=8192: 3.5522608460000002 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=1048576 and batch=16 is 1.692278534804199 secs
Time to generate example for delta = 16384 is 0 secs
Time to commit t_com (excluded from lookup time) in 251ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 6797 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 218 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 212 msec
Scalar computation took 7459 msec
MSM took 425 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=16384: 7.919463642 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=1048576 and batch=16 is 3.7151366010222158 secs
Time to generate example for delta = 32768 is 0 secs
Time to commit t_com (excluded from lookup time) in 529ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 6
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 14718 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 411 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 397 msec
Scalar computation took 15971 msec
MSM took 633 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=32768: 16.667886317 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=1048576 and batch=16 is 8.005473712950925 secs
Time to generate example for delta = 65536 is 0 secs
Time to commit t_com (excluded from lookup time) in 845ms
Committed f_com in 1ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 16
Computed update params in 21 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 5 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33337 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 871 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 836 msec
Scalar computation took 35957 msec
MSM took 1268 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=65536: 37.363241972 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=1048576 and batch=16 is 17.511782072991522 secs
Time to generate example for delta = 131072 is 0 secs
Time to commit t_com (excluded from lookup time) in 1628ms
Committed f_com in 1ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 6 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 73600 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1701 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 1
Evaluating C(X) over K took 1653 msec
Scalar computation took 78746 msec
MSM took 2244 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=131072: 81.245967939 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=1048576 and batch=16 is 38.4095327087638 secs
Time to generate example for delta = 262144 is 0 secs
Time to commit t_com (excluded from lookup time) in 3139ms
Committed f_com in 1ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 84
Computed update params in 106 secs
Time for sub-products = 0
Time for divisions = 11
Computed oracles on set I in 14 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 162586 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 3
Evaluating Z_I(X) over K took 3296 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 3
Evaluating C(X) over K took 3200 msec
Scalar computation took 172669 msec
MSM took 3804 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=262144: 176.976198047 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=1048576 and batch=16 is 83.76176857827002 secs
Time to generate example for delta = 524288 is 1 secs
Time to commit t_com (excluded from lookup time) in 6516ms
Committed f_com in 1ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 186
Computed update params in 234 secs
Time for sub-products = 0
Time for divisions = 19
Computed oracles on set I in 23 secs
Interpolated q polynomial in 59 secs
Time for sub-products = 0
Time for divisions = 24
Evaluated q_dvt on I in 24 secs
Computing a_vec over K took 343544 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 6
Evaluating Z_I(X) over K took 6699 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 1 msec
Time for divisions = 6
Evaluating C(X) over K took 6595 msec
Scalar computation took 363972 msec
MSM took 7367 msecs
Proof Generation Time for table=1048576 and batch=16 and delta=524288: 372.340653184 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=1048576 and batch=16 is 179.2115876093906 secs
Running setup for table size 1048576 and batch size 4096
time to setup powers = 90.295460957s
dummy pp setup takes 97 seconds
dummy table init takes 0 seconds
Time to generate example for delta = 0 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=1048576 and batch=4096 and delta=0: 0.073838191 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=1048576 and batch=4096 is 0.073838191 secs
Time to generate example for delta = 4096 is 0 secs
Time to commit t_com (excluded from lookup time) in 86ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1119 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1996 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 307 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 347 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 571 msec
Time for divisions = 0
Evaluating C(X) over K took 663 msec
Scalar computation took 6703 msec
MSM took 121 msecs
Proof Generation Time for table=1048576 and batch=4096 and delta=4096: 7.525023358 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=1048576 and batch=4096 is 3.7994307745 secs
Time to generate example for delta = 8192 is 0 secs
Time to commit t_com (excluded from lookup time) in 145ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1122 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3740 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 326 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1048 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 609 msec
Time for divisions = 1
Evaluating C(X) over K took 1484 msec
Scalar computation took 11167 msec
MSM took 224 msecs
Proof Generation Time for table=1048576 and batch=4096 and delta=8192: 12.103498206 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=1048576 and batch=4096 is 7.37915513425 secs
Time to generate example for delta = 16384 is 0 secs
Time to commit t_com (excluded from lookup time) in 251ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1167 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 1 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 7508 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 316 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2413 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 611 msec
Time for divisions = 3
Evaluating C(X) over K took 3062 msec
Scalar computation took 20282 msec
MSM took 412 msecs
Proof Generation Time for table=1048576 and batch=4096 and delta=16384: 21.446156369 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=1048576 and batch=4096 is 12.660907346062501 secs
Time to generate example for delta = 32768 is 0 secs
Time to commit t_com (excluded from lookup time) in 497ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1149 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15671 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 307 msec
Time for divisions = 5
Evaluating Z_I(X) over K took 5115 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 638 msec
Time for divisions = 6
Evaluating C(X) over K took 6362 msec
Scalar computation took 38879 msec
MSM took 649 msecs
Proof Generation Time for table=1048576 and batch=4096 and delta=32768: 40.304578326 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=1048576 and batch=4096 is 22.3574630329375 secs
Time to generate example for delta = 65536 is 0 secs
Time to commit t_com (excluded from lookup time) in 843ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1162 msec
Time for divisions = 16
Computed update params in 21 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 34297 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 307 msec
Time for divisions = 10
Evaluating Z_I(X) over K took 10438 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 631 msec
Time for divisions = 12
Evaluating C(X) over K took 12622 msec
Scalar computation took 77903 msec
MSM took 1233 msecs
Proof Generation Time for table=1048576 and batch=4096 and delta=65536: 79.992702093 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=1048576 and batch=4096 is 41.87317855507813 secs
Time to generate example for delta = 131072 is 0 secs
Time to commit t_com (excluded from lookup time) in 1576ms
Committed f_com in 108ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1201 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 7 secs
Interpolated q polynomial in 13 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 74639 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 309 msec
Time for divisions = 21
Evaluating Z_I(X) over K took 21331 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 646 msec
Time for divisions = 25
Evaluating C(X) over K took 25077 msec
Scalar computation took 159436 msec
MSM took 2257 msecs
Proof Generation Time for table=1048576 and batch=4096 and delta=131072: 162.704765982 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=1048576 and batch=4096 is 82.25714429542188 secs
Time to generate example for delta = 262144 is 0 secs
Time to commit t_com (excluded from lookup time) in 3096ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1192 msec
Time for divisions = 83
Computed update params in 105 secs
Time for sub-products = 0
Time for divisions = 11
Computed oracles on set I in 14 secs
Interpolated q polynomial in 28 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 163601 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 316 msec
Time for divisions = 43
Evaluating Z_I(X) over K took 43255 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 647 msec
Time for divisions = 50
Evaluating C(X) over K took 50255 msec
Scalar computation took 332340 msec
MSM took 3959 msecs
Proof Generation Time for table=1048576 and batch=4096 and delta=262144: 337.628381494 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=1048576 and batch=4096 is 166.89515438980467 secs
Time to generate example for delta = 524288 is 1 secs
Time to commit t_com (excluded from lookup time) in 6286ms
Committed f_com in 108ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1246 msec
Time for divisions = 186
Computed update params in 234 secs
Time for sub-products = 0
Time for divisions = 20
Computed oracles on set I in 24 secs
Interpolated q polynomial in 59 secs
Time for sub-products = 0
Time for divisions = 24
Evaluated q_dvt on I in 25 secs
Computing a_vec over K took 345672 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 308 msec
Time for divisions = 85
Evaluating Z_I(X) over K took 86009 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 703 msec
Time for divisions = 101
Evaluating C(X) over K took 101904 msec
Scalar computation took 679545 msec
MSM took 7478 msecs
Proof Generation Time for table=1048576 and batch=4096 and delta=524288: 688.99141316 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=1048576 and batch=4096 is 340.78878177962497 secs
Running setup for table size 1048576 and batch size 16384
time to setup powers = 90.139768105s
dummy pp setup takes 171 seconds
dummy table init takes 0 seconds
Time to generate example for delta = 0 is 0 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=1048576 and batch=16384 and delta=0: 0.21909945 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=1048576 and batch=16384 is 0.21909945 secs
Time to generate example for delta = 16384 is 0 secs
Time to commit t_com (excluded from lookup time) in 260ms
Committed f_com in 339ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6226 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 10445 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1741 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2095 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3167 msec
Time for divisions = 4
Evaluating C(X) over K took 4113 msec
Scalar computation took 54076 msec
MSM took 418 msecs
Proof Generation Time for table=1048576 and batch=16384 and delta=16384: 56.672711342 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=1048576 and batch=16384 is 28.445905396 secs
Time to generate example for delta = 32768 is 0 secs
Time to commit t_com (excluded from lookup time) in 511ms
Committed f_com in 329ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6104 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 3 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 18684 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1732 msec
Time for divisions = 6
Evaluating Z_I(X) over K took 6141 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3209 msec
Time for divisions = 8
Evaluating C(X) over K took 8745 msec
Scalar computation took 88469 msec
MSM took 657 msecs
Proof Generation Time for table=1048576 and batch=16384 and delta=32768: 91.328873037 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=1048576 and batch=16384 is 55.555369004625 secs
Time to generate example for delta = 65536 is 0 secs
Time to commit t_com (excluded from lookup time) in 867ms
Committed f_com in 330ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6300 msec
Time for divisions = 16
Computed update params in 21 secs
Time for sub-products = 0
Time for divisions = 3
Computed oracles on set I in 4 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 3
Evaluated q_dvt on I in 3 secs
Computing a_vec over K took 37386 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1793 msec
Time for divisions = 14
Evaluating Z_I(X) over K took 14334 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3275 msec
Time for divisions = 17
Evaluating C(X) over K took 17587 msec
Scalar computation took 158910 msec
MSM took 1246 msecs
Proof Generation Time for table=1048576 and batch=16384 and delta=65536: 162.511466623 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=1048576 and batch=16384 is 95.68668151643749 secs
Time to generate example for delta = 131072 is 0 secs
Time to commit t_com (excluded from lookup time) in 1577ms
Committed f_com in 337ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6470 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 6
Computed oracles on set I in 8 secs
Interpolated q polynomial in 13 secs
Time for sub-products = 0
Time for divisions = 6
Evaluated q_dvt on I in 6 secs
Computing a_vec over K took 77866 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1756 msec
Time for divisions = 30
Evaluating Z_I(X) over K took 30380 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3250 msec
Time for divisions = 35
Evaluating C(X) over K took 35823 msec
Scalar computation took 303259 msec
MSM took 2353 msecs
Proof Generation Time for table=1048576 and batch=16384 and delta=131072: 308.213423028 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=1048576 and batch=16384 is 170.077749308625 secs
Time to generate example for delta = 262144 is 0 secs
Time to commit t_com (excluded from lookup time) in 3190ms
Committed f_com in 338ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6302 msec
Time for divisions = 84
Computed update params in 107 secs
Time for sub-products = 0
Time for divisions = 12
Computed oracles on set I in 16 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 12
Evaluated q_dvt on I in 13 secs
Computing a_vec over K took 168005 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1787 msec
Time for divisions = 62
Evaluating Z_I(X) over K took 62816 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3318 msec
Time for divisions = 73
Evaluating C(X) over K took 73179 msec
Scalar computation took 600696 msec
MSM took 3981 msecs
Proof Generation Time for table=1048576 and batch=16384 and delta=262144: 607.759966067 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=1048576 and batch=16384 is 318.7126366630469 secs
Time to generate example for delta = 524288 is 1 secs
Time to commit t_com (excluded from lookup time) in 6387ms
Committed f_com in 338ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6478 msec
Time for divisions = 188
Computed update params in 235 secs
Time for sub-products = 0
Time for divisions = 21
Computed oracles on set I in 25 secs
Interpolated q polynomial in 60 secs
Time for sub-products = 0
Time for divisions = 26
Evaluated q_dvt on I in 26 secs
Computing a_vec over K took 351237 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1693 msec
Time for divisions = 128
Evaluating Z_I(X) over K took 128552 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3489 msec
Time for divisions = 146
Evaluating C(X) over K took 146170 msec
Scalar computation took 1200006 msec
MSM took 7543 msecs
Proof Generation Time for table=1048576 and batch=16384 and delta=524288: 1211.469519772 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=1048576 and batch=16384 is 618.8801706795937 secs
lookup time is too long, stop exploring more delta
Running setup for table size 2097152 and batch size 4096
time to setup powers = 166.235354906s
dummy pp setup takes 173 seconds
dummy table init takes 1 seconds
Time to generate example for delta = 0 is 1 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=2097152 and batch=4096 and delta=0: 0.078679253 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=2097152 and batch=4096 is 0.078679253 secs
Time to generate example for delta = 4096 is 1 secs
Time to commit t_com (excluded from lookup time) in 87ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1101 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2000 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 307 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 346 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 547 msec
Time for divisions = 0
Evaluating C(X) over K took 593 msec
Scalar computation took 6595 msec
MSM took 121 msecs
Proof Generation Time for table=2097152 and batch=4096 and delta=4096: 7.41149457 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=2097152 and batch=4096 is 3.7450869115 secs
Time to generate example for delta = 8192 is 1 secs
Time to commit t_com (excluded from lookup time) in 145ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1110 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3657 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 307 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1015 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 562 msec
Time for divisions = 1
Evaluating C(X) over K took 1427 msec
Scalar computation took 10883 msec
MSM took 224 msecs
Proof Generation Time for table=2097152 and batch=4096 and delta=8192: 11.813700365999999 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=2097152 and batch=4096 is 7.22911791425 secs
Time to generate example for delta = 16384 is 1 secs
Time to commit t_com (excluded from lookup time) in 251ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1145 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 1 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 7663 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 312 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2390 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 598 msec
Time for divisions = 3
Evaluating C(X) over K took 3055 msec
Scalar computation took 20207 msec
MSM took 408 msecs
Proof Generation Time for table=2097152 and batch=4096 and delta=16384: 21.352065651 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=2097152 and batch=4096 is 12.502148291687499 secs
Time to generate example for delta = 32768 is 1 secs
Time to commit t_com (excluded from lookup time) in 497ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1135 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15546 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 307 msec
Time for divisions = 5
Evaluating Z_I(X) over K took 5138 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 605 msec
Time for divisions = 6
Evaluating C(X) over K took 6179 msec
Scalar computation took 38556 msec
MSM took 649 msecs
Proof Generation Time for table=2097152 and batch=4096 and delta=32768: 39.976171616 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=2097152 and batch=4096 is 22.165136773999997 secs
Time to generate example for delta = 65536 is 1 secs
Time to commit t_com (excluded from lookup time) in 865ms
Committed f_com in 108ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1179 msec
Time for divisions = 16
Computed update params in 21 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33994 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 312 msec
Time for divisions = 10
Evaluating Z_I(X) over K took 10633 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 620 msec
Time for divisions = 12
Evaluating C(X) over K took 12540 msec
Scalar computation took 77884 msec
MSM took 1233 msecs
Proof Generation Time for table=2097152 and batch=4096 and delta=65536: 79.979935499 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=2097152 and batch=4096 is 41.69665397642188 secs
Time to generate example for delta = 131072 is 1 secs
Time to commit t_com (excluded from lookup time) in 1576ms
Committed f_com in 107ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1182 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 7 secs
Interpolated q polynomial in 13 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 75038 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 325 msec
Time for divisions = 22
Evaluating Z_I(X) over K took 22167 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 632 msec
Time for divisions = 25
Evaluating C(X) over K took 25148 msec
Scalar computation took 161312 msec
MSM took 2225 msecs
Proof Generation Time for table=2097152 and batch=4096 and delta=131072: 164.529530196 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=2097152 and batch=4096 is 82.63623712053123 secs
Time to generate example for delta = 262144 is 1 secs
Time to commit t_com (excluded from lookup time) in 3198ms
Committed f_com in 108ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1208 msec
Time for divisions = 83
Computed update params in 106 secs
Time for sub-products = 0
Time for divisions = 11
Computed oracles on set I in 14 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 163204 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 326 msec
Time for divisions = 43
Evaluating Z_I(X) over K took 43589 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 643 msec
Time for divisions = 50
Evaluating C(X) over K took 50264 msec
Scalar computation took 331354 msec
MSM took 3830 msecs
Proof Generation Time for table=2097152 and batch=4096 and delta=262144: 336.494489417 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=2097152 and batch=4096 is 167.24586158547265 secs
Time to generate example for delta = 524288 is 1 secs
Time to commit t_com (excluded from lookup time) in 6230ms
Committed f_com in 106ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1191 msec
Time for divisions = 191
Computed update params in 239 secs
Time for sub-products = 0
Time for divisions = 25
Computed oracles on set I in 31 secs
Interpolated q polynomial in 59 secs
Time for sub-products = 0
Time for divisions = 25
Evaluated q_dvt on I in 25 secs
Computing a_vec over K took 361835 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 325 msec
Time for divisions = 87
Evaluating Z_I(X) over K took 87641 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 663 msec
Time for divisions = 101
Evaluating C(X) over K took 101699 msec
Scalar computation took 697002 msec
MSM took 7480 msecs
Proof Generation Time for table=2097152 and batch=4096 and delta=524288: 706.336877942 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=2097152 and batch=4096 is 345.0531210475742 secs
Time to generate example for delta = 1048576 is 4 secs
Time to commit t_com (excluded from lookup time) in 12115ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1284 msec
Time for divisions = 418
Computed update params in 523 secs
Time for sub-products = 0
Time for divisions = 44
Computed oracles on set I in 51 secs
Interpolated q polynomial in 128 secs
Time for sub-products = 0
Time for divisions = 53
Evaluated q_dvt on I in 53 secs
Computing a_vec over K took 762658 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 328 msec
Time for divisions = 173
Evaluating Z_I(X) over K took 173560 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 710 msec
Time for divisions = 201
Evaluating C(X) over K took 201704 msec
Scalar computation took 1429756 msec
MSM took 14602 msecs
Proof Generation Time for table=2097152 and batch=4096 and delta=1048576: 1447.389873216 secs
===> Average (finish at delta=1048576) lookup time (without table init time) for table=2097152 and batch=4096 is 711.6819328789844 secs
lookup time is too long, stop exploring more delta
Running setup for table size 2097152 and batch size 16384
time to setup powers = 165.477282317s
dummy pp setup takes 246 seconds
dummy table init takes 1 seconds
Time to generate example for delta = 0 is 1 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=2097152 and batch=16384 and delta=0: 0.220314081 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=2097152 and batch=16384 is 0.220314081 secs
Time to generate example for delta = 16384 is 1 secs
Time to commit t_com (excluded from lookup time) in 251ms
Committed f_com in 329ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6007 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 10351 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1715 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2096 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3111 msec
Time for divisions = 4
Evaluating C(X) over K took 4091 msec
Scalar computation took 53633 msec
MSM took 422 msecs
Proof Generation Time for table=2097152 and batch=16384 and delta=16384: 56.178389238 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=2097152 and batch=16384 is 28.1993516595 secs
Time to generate example for delta = 32768 is 1 secs
Time to commit t_com (excluded from lookup time) in 499ms
Committed f_com in 329ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6073 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 3 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 18914 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1791 msec
Time for divisions = 6
Evaluating Z_I(X) over K took 6082 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3170 msec
Time for divisions = 8
Evaluating C(X) over K took 8721 msec
Scalar computation took 88401 msec
MSM took 637 msecs
Proof Generation Time for table=2097152 and batch=16384 and delta=32768: 91.201407158 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=2097152 and batch=16384 is 55.32250216875 secs
Time to generate example for delta = 65536 is 1 secs
Time to commit t_com (excluded from lookup time) in 845ms
Committed f_com in 330ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6426 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 3
Computed oracles on set I in 4 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 3
Evaluated q_dvt on I in 3 secs
Computing a_vec over K took 36938 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1735 msec
Time for divisions = 14
Evaluating Z_I(X) over K took 14210 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3224 msec
Time for divisions = 18
Evaluating C(X) over K took 18191 msec
Scalar computation took 159471 msec
MSM took 1236 msecs
Proof Generation Time for table=2097152 and batch=16384 and delta=65536: 163.008907266 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=2097152 and batch=16384 is 95.70179844712499 secs
Time to generate example for delta = 131072 is 1 secs
Time to commit t_com (excluded from lookup time) in 1543ms
Committed f_com in 333ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6286 msec
Time for divisions = 36
Computed update params in 46 secs
Time for sub-products = 0
Time for divisions = 6
Computed oracles on set I in 8 secs
Interpolated q polynomial in 13 secs
Time for sub-products = 0
Time for divisions = 6
Evaluated q_dvt on I in 6 secs
Computing a_vec over K took 77173 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1747 msec
Time for divisions = 30
Evaluating Z_I(X) over K took 30260 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3188 msec
Time for divisions = 36
Evaluating C(X) over K took 36206 msec
Scalar computation took 302375 msec
MSM took 2285 msecs
Proof Generation Time for table=2097152 and batch=16384 and delta=131072: 307.116393696 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=2097152 and batch=16384 is 169.88558341499999 secs
Time to generate example for delta = 262144 is 1 secs
Time to commit t_com (excluded from lookup time) in 3246ms
Committed f_com in 330ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6235 msec
Time for divisions = 85
Computed update params in 107 secs
Time for sub-products = 0
Time for divisions = 12
Computed oracles on set I in 16 secs
Interpolated q polynomial in 28 secs
Time for sub-products = 0
Time for divisions = 12
Evaluated q_dvt on I in 13 secs
Computing a_vec over K took 167900 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1694 msec
Time for divisions = 62
Evaluating Z_I(X) over K took 62983 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3307 msec
Time for divisions = 72
Evaluating C(X) over K took 72487 msec
Scalar computation took 601649 msec
MSM took 3873 msecs
Proof Generation Time for table=2097152 and batch=16384 and delta=262144: 608.371482089 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=2097152 and batch=16384 is 318.5218714098906 secs
Time to generate example for delta = 524288 is 1 secs
Time to commit t_com (excluded from lookup time) in 6394ms
Committed f_com in 338ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6414 msec
Time for divisions = 190
Computed update params in 238 secs
Time for sub-products = 0
Time for divisions = 26
Computed oracles on set I in 33 secs
Interpolated q polynomial in 59 secs
Time for sub-products = 0
Time for divisions = 26
Evaluated q_dvt on I in 26 secs
Computing a_vec over K took 364814 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1691 msec
Time for divisions = 126
Evaluating Z_I(X) over K took 126561 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3473 msec
Time for divisions = 146
Evaluating C(X) over K took 146897 msec
Scalar computation took 1214183 msec
MSM took 7461 msecs
Proof Generation Time for table=2097152 and batch=16384 and delta=524288: 1225.270025537 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=2097152 and batch=16384 is 622.4908324821329 secs
lookup time is too long, stop exploring more delta
Running setup for table size 4194304 and batch size 16
time to setup powers = 328.302053631s
dummy pp setup takes 341 seconds
dummy table init takes 2 seconds
Time to generate example for delta = 0 is 2 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=4194304 and batch=16 and delta=0: 0.003189322 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=4194304 and batch=16 is 0.003189322 secs
Time to generate example for delta = 16 is 2 secs
Time to commit t_com (excluded from lookup time) in 1ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 6 msec
MSM took 3 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=16: 0.012914635 secs
===> Average (finish at delta=16) lookup time (without table init time) for table=4194304 and batch=16 is 0.008051978500000001 secs
Time to generate example for delta = 32 is 2 secs
Time to commit t_com (excluded from lookup time) in 2ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 4 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 8 msec
MSM took 3 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=32: 0.015497131 secs
===> Average (finish at delta=32) lookup time (without table init time) for table=4194304 and batch=16 is 0.01145174275 secs
Time to generate example for delta = 64 is 2 secs
Time to commit t_com (excluded from lookup time) in 4ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 8 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 14 msec
MSM took 6 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=64: 0.023745951 secs
===> Average (finish at delta=64) lookup time (without table init time) for table=4194304 and batch=16 is 0.016052193125000003 secs
Time to generate example for delta = 128 is 2 secs
Time to commit t_com (excluded from lookup time) in 5ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 18 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 1 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 1 msec
Scalar computation took 26 msec
MSM took 11 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=128: 0.040964737 secs
===> Average (finish at delta=128) lookup time (without table init time) for table=4194304 and batch=16 is 0.024741855625000003 secs
Time to generate example for delta = 256 is 2 secs
Time to commit t_com (excluded from lookup time) in 10ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 44 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 3 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 3 msec
Scalar computation took 57 msec
MSM took 15 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=256: 0.077236523 secs
===> Average (finish at delta=256) lookup time (without table init time) for table=4194304 and batch=16 is 0.04248798946875 secs
Time to generate example for delta = 512 is 2 secs
Time to commit t_com (excluded from lookup time) in 16ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 118 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 6 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 6 msec
Scalar computation took 140 msec
MSM took 26 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=512: 0.171084832 secs
===> Average (finish at delta=512) lookup time (without table init time) for table=4194304 and batch=16 is 0.08405752339843751 secs
Time to generate example for delta = 1024 is 2 secs
Time to commit t_com (excluded from lookup time) in 25ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 275 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 13 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 12 msec
Scalar computation took 317 msec
MSM took 48 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=1024: 0.371595622 secs
===> Average (finish at delta=1024) lookup time (without table init time) for table=4194304 and batch=16 is 0.17848212047265627 secs
Time to generate example for delta = 2048 is 2 secs
Time to commit t_com (excluded from lookup time) in 47ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 612 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 26 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 25 msec
Scalar computation took 695 msec
MSM took 67 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=2048: 0.770846358 secs
===> Average (finish at delta=2048) lookup time (without table init time) for table=4194304 and batch=16 is 0.3756313418300781 secs
Time to generate example for delta = 4096 is 2 secs
Time to commit t_com (excluded from lookup time) in 92ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1411 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 51 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 49 msec
Scalar computation took 1571 msec
MSM took 122 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=4096: 1.7057742569999998 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=4194304 and batch=16 is 0.8078838401914064 secs
Time to generate example for delta = 8192 is 2 secs
Time to commit t_com (excluded from lookup time) in 145ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2998 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 106 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 104 msec
Scalar computation took 3322 msec
MSM took 223 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=8192: 3.566559959 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=4194304 and batch=16 is 1.7229340608642574 secs
Time to generate example for delta = 16384 is 2 secs
Time to commit t_com (excluded from lookup time) in 254ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 6657 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 205 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 210 msec
Scalar computation took 7303 msec
MSM took 425 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=16384: 7.767443559 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=4194304 and batch=16 is 3.695993516279785 secs
Time to generate example for delta = 32768 is 2 secs
Time to commit t_com (excluded from lookup time) in 499ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 6
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 14740 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 415 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 402 msec
Scalar computation took 16010 msec
MSM took 631 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=32768: 16.712090988 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=4194304 and batch=16 is 7.968972270796755 secs
Time to generate example for delta = 65536 is 2 secs
Time to commit t_com (excluded from lookup time) in 844ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 5 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33142 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 868 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 845 msec
Scalar computation took 35780 msec
MSM took 1256 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=65536: 37.178446108 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=4194304 and batch=16 is 17.458369576581 secs
Time to generate example for delta = 131072 is 3 secs
Time to commit t_com (excluded from lookup time) in 1578ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 6 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 73294 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1648 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 1
Evaluating C(X) over K took 1603 msec
Scalar computation took 78320 msec
MSM took 2322 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=131072: 80.910555437 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=4194304 and batch=16 is 38.25276977260352 secs
Time to generate example for delta = 262144 is 3 secs
Time to commit t_com (excluded from lookup time) in 3183ms
Committed f_com in 1ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 84
Computed update params in 106 secs
Time for sub-products = 0
Time for divisions = 11
Computed oracles on set I in 14 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 162266 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 3
Evaluating Z_I(X) over K took 3381 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 1 msec
Time for divisions = 3
Evaluating C(X) over K took 3233 msec
Scalar computation took 172466 msec
MSM took 3963 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=262144: 177.015927208 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=4194304 and batch=16 is 83.6094719991474 secs
Time to generate example for delta = 524288 is 3 secs
Time to commit t_com (excluded from lookup time) in 6325ms
Committed f_com in 1ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 190
Computed update params in 238 secs
Time for sub-products = 0
Time for divisions = 24
Computed oracles on set I in 31 secs
Interpolated q polynomial in 59 secs
Time for sub-products = 0
Time for divisions = 24
Evaluated q_dvt on I in 24 secs
Computing a_vec over K took 359104 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 6
Evaluating Z_I(X) over K took 6759 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 6
Evaluating C(X) over K took 6562 msec
Scalar computation took 379568 msec
MSM took 7468 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=524288: 388.139777519 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=4194304 and batch=16 is 183.09527292847275 secs
Time to generate example for delta = 1048576 is 3 secs
Time to commit t_com (excluded from lookup time) in 12243ms
Committed f_com in 1ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 427
Computed update params in 530 secs
Time for sub-products = 0
Time for divisions = 53
Computed oracles on set I in 66 secs
Interpolated q polynomial in 128 secs
Time for sub-products = 0
Time for divisions = 53
Evaluated q_dvt on I in 53 secs
Computing a_vec over K took 790653 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 13
Evaluating Z_I(X) over K took 13608 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 19 msec
Time for divisions = 12
Evaluating C(X) over K took 13147 msec
Scalar computation took 831865 msec
MSM took 14724 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=1048576: 848.834584114 secs
===> Average (finish at delta=1048576) lookup time (without table init time) for table=4194304 and batch=16 is 400.7929842837058 secs
Time to generate example for delta = 2097152 is 9 secs
Time to commit t_com (excluded from lookup time) in 20040ms
Committed f_com in 1ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1 msec
Time for divisions = 935
Computed update params in 1159 secs
Time for sub-products = 0
Time for divisions = 88
Computed oracles on set I in 103 secs
Interpolated q polynomial in 274 secs
Time for sub-products = 0
Time for divisions = 108
Evaluated q_dvt on I in 108 secs
Computing a_vec over K took 1657224 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 27
Evaluating Z_I(X) over K took 27504 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 39 msec
Time for divisions = 25
Evaluating C(X) over K took 26182 msec
Scalar computation took 1739868 msec
MSM took 26604 msecs
Proof Generation Time for table=4194304 and batch=16 and delta=2097152: 1770.862808001 secs
===> Average (finish at delta=2097152) lookup time (without table init time) for table=4194304 and batch=16 is 855.3225987998751 secs
lookup time is too long, stop exploring more delta
Running setup for table size 4194304 and batch size 4096
time to setup powers = 327.755025358s
dummy pp setup takes 345 seconds
dummy table init takes 2 seconds
Time to generate example for delta = 0 is 2 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=4194304 and batch=4096 and delta=0: 0.087537734 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=4194304 and batch=4096 is 0.087537734 secs
Time to generate example for delta = 4096 is 2 secs
Time to commit t_com (excluded from lookup time) in 86ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1113 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1983 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 307 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 345 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 539 msec
Time for divisions = 0
Evaluating C(X) over K took 602 msec
Scalar computation took 6617 msec
MSM took 125 msecs
Proof Generation Time for table=4194304 and batch=4096 and delta=4096: 7.429646298 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=4194304 and batch=4096 is 3.7585920159999997 secs
Time to generate example for delta = 8192 is 2 secs
Time to commit t_com (excluded from lookup time) in 147ms
Committed f_com in 107ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1172 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3778 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 309 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1069 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 584 msec
Time for divisions = 1
Evaluating C(X) over K took 1479 msec
Scalar computation took 11265 msec
MSM took 230 msecs
Proof Generation Time for table=4194304 and batch=4096 and delta=8192: 12.23063878 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=4194304 and batch=4096 is 7.39449133775 secs
Time to generate example for delta = 16384 is 2 secs
Time to commit t_com (excluded from lookup time) in 258ms
Committed f_com in 107ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1134 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 1 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 7734 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 324 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2450 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 600 msec
Time for divisions = 3
Evaluating C(X) over K took 3136 msec
Scalar computation took 20636 msec
MSM took 430 msecs
Proof Generation Time for table=4194304 and batch=4096 and delta=16384: 21.810020585 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=4194304 and batch=4096 is 12.806121872937501 secs
Time to generate example for delta = 32768 is 2 secs
Time to commit t_com (excluded from lookup time) in 512ms
Committed f_com in 108ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1157 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15735 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 311 msec
Time for divisions = 5
Evaluating Z_I(X) over K took 5136 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 594 msec
Time for divisions = 6
Evaluating C(X) over K took 6209 msec
Scalar computation took 38608 msec
MSM took 634 msecs
Proof Generation Time for table=4194304 and batch=4096 and delta=32768: 40.022845924 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=4194304 and batch=4096 is 22.430428355562505 secs
Time to generate example for delta = 65536 is 3 secs
Time to commit t_com (excluded from lookup time) in 846ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1152 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33893 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 316 msec
Time for divisions = 10
Evaluating Z_I(X) over K took 10615 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 623 msec
Time for divisions = 12
Evaluating C(X) over K took 12804 msec
Scalar computation took 78356 msec
MSM took 1259 msecs
Proof Generation Time for table=4194304 and batch=4096 and delta=65536: 80.465238171 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=4194304 and batch=4096 is 41.969147580390626 secs
Time to generate example for delta = 131072 is 3 secs
Time to commit t_com (excluded from lookup time) in 1536ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1151 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 7 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 74462 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 309 msec
Time for divisions = 21
Evaluating Z_I(X) over K took 21229 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 601 msec
Time for divisions = 25
Evaluating C(X) over K took 25202 msec
Scalar computation took 159166 msec
MSM took 2296 msecs
Proof Generation Time for table=4194304 and batch=4096 and delta=131072: 162.443726575 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=4194304 and batch=4096 is 82.35227191735156 secs
Time to generate example for delta = 262144 is 3 secs
Time to commit t_com (excluded from lookup time) in 3195ms
Committed f_com in 110ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1230 msec
Time for divisions = 84
Computed update params in 106 secs
Time for sub-products = 0
Time for divisions = 11
Computed oracles on set I in 15 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 164067 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 311 msec
Time for divisions = 42
Evaluating Z_I(X) over K took 42991 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 630 msec
Time for divisions = 50
Evaluating C(X) over K took 50696 msec
Scalar computation took 332125 msec
MSM took 3759 msecs
Proof Generation Time for table=4194304 and batch=4096 and delta=262144: 337.189063968 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=4194304 and batch=4096 is 166.7669325686172 secs
Time to generate example for delta = 524288 is 3 secs
Time to commit t_com (excluded from lookup time) in 6390ms
Committed f_com in 108ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1176 msec
Time for divisions = 190
Computed update params in 238 secs
Time for sub-products = 0
Time for divisions = 25
Computed oracles on set I in 31 secs
Interpolated q polynomial in 59 secs
Time for sub-products = 0
Time for divisions = 25
Evaluated q_dvt on I in 25 secs
Computing a_vec over K took 360607 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 308 msec
Time for divisions = 86
Evaluating Z_I(X) over K took 86604 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 634 msec
Time for divisions = 101
Evaluating C(X) over K took 101171 msec
Scalar computation took 694918 msec
MSM took 7338 msecs
Proof Generation Time for table=4194304 and batch=4096 and delta=524288: 704.12237488 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=4194304 and batch=4096 is 344.42799261918424 secs
Time to generate example for delta = 1048576 is 3 secs
Time to commit t_com (excluded from lookup time) in 12091ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1199 msec
Time for divisions = 427
Computed update params in 530 secs
Time for sub-products = 0
Time for divisions = 53
Computed oracles on set I in 66 secs
Interpolated q polynomial in 127 secs
Time for sub-products = 0
Time for divisions = 53
Evaluated q_dvt on I in 53 secs
Computing a_vec over K took 790310 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 308 msec
Time for divisions = 174
Evaluating Z_I(X) over K took 174390 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 666 msec
Time for divisions = 203
Evaluating C(X) over K took 203736 msec
Scalar computation took 1460874 msec
MSM took 14544 msecs
Proof Generation Time for table=4194304 and batch=4096 and delta=1048576: 1478.492023258 secs
===> Average (finish at delta=1048576) lookup time (without table init time) for table=4194304 and batch=4096 is 718.6238162038359 secs
lookup time is too long, stop exploring more delta
Running setup for table size 4194304 and batch size 16384
time to setup powers = 329.515566336s
dummy pp setup takes 422 seconds
dummy table init takes 2 seconds
Time to generate example for delta = 0 is 2 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=4194304 and batch=16384 and delta=0: 0.225785236 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=4194304 and batch=16384 is 0.225785236 secs
Time to generate example for delta = 16384 is 2 secs
Time to commit t_com (excluded from lookup time) in 259ms
Committed f_com in 339ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6114 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 10539 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1704 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2058 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3122 msec
Time for divisions = 4
Evaluating C(X) over K took 4049 msec
Scalar computation took 54032 msec
MSM took 410 msecs
Proof Generation Time for table=4194304 and batch=16384 and delta=16384: 56.593069003 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=4194304 and batch=16384 is 28.4094271195 secs
Time to generate example for delta = 32768 is 2 secs
Time to commit t_com (excluded from lookup time) in 511ms
Committed f_com in 338ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6150 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 3 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 19212 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1781 msec
Time for divisions = 6
Evaluating Z_I(X) over K took 6150 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3031 msec
Time for divisions = 8
Evaluating C(X) over K took 8484 msec
Scalar computation took 88384 msec
MSM took 663 msecs
Proof Generation Time for table=4194304 and batch=16384 and delta=32768: 91.263199644 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=4194304 and batch=16384 is 55.502547051624994 secs
Time to generate example for delta = 65536 is 2 secs
Time to commit t_com (excluded from lookup time) in 842ms
Committed f_com in 329ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6224 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 3
Computed oracles on set I in 4 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 3
Evaluated q_dvt on I in 3 secs
Computing a_vec over K took 36853 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1792 msec
Time for divisions = 14
Evaluating Z_I(X) over K took 14283 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3157 msec
Time for divisions = 17
Evaluating C(X) over K took 17832 msec
Scalar computation took 158061 msec
MSM took 1206 msecs
Proof Generation Time for table=4194304 and batch=16384 and delta=65536: 161.511069252 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=4194304 and batch=16384 is 95.3353326003125 secs
Time to generate example for delta = 131072 is 2 secs
Time to commit t_com (excluded from lookup time) in 1528ms
Committed f_com in 330ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6272 msec
Time for divisions = 36
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 6
Computed oracles on set I in 8 secs
Interpolated q polynomial in 13 secs
Time for sub-products = 0
Time for divisions = 6
Evaluated q_dvt on I in 6 secs
Computing a_vec over K took 77439 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1741 msec
Time for divisions = 30
Evaluating Z_I(X) over K took 30391 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3227 msec
Time for divisions = 36
Evaluating C(X) over K took 36199 msec
Scalar computation took 304022 msec
MSM took 2280 msecs
Proof Generation Time for table=4194304 and batch=16384 and delta=131072: 308.718748002 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=4194304 and batch=16384 is 169.82536057459373 secs
Time to generate example for delta = 262144 is 3 secs
Time to commit t_com (excluded from lookup time) in 3141ms
Committed f_com in 330ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6258 msec
Time for divisions = 84
Computed update params in 106 secs
Time for sub-products = 0
Time for divisions = 12
Computed oracles on set I in 16 secs
Interpolated q polynomial in 28 secs
Time for sub-products = 0
Time for divisions = 12
Evaluated q_dvt on I in 13 secs
Computing a_vec over K took 167152 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1714 msec
Time for divisions = 63
Evaluating Z_I(X) over K took 63055 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3280 msec
Time for divisions = 72
Evaluating C(X) over K took 72876 msec
Scalar computation took 599259 msec
MSM took 3826 msecs
Proof Generation Time for table=4194304 and batch=16384 and delta=262144: 605.843357522 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=4194304 and batch=16384 is 318.1957786920469 secs
Time to generate example for delta = 524288 is 3 secs
Time to commit t_com (excluded from lookup time) in 6599ms
Committed f_com in 340ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6544 msec
Time for divisions = 193
Computed update params in 241 secs
Time for sub-products = 0
Time for divisions = 26
Computed oracles on set I in 34 secs
Interpolated q polynomial in 60 secs
Time for sub-products = 0
Time for divisions = 26
Evaluated q_dvt on I in 26 secs
Computing a_vec over K took 368719 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1696 msec
Time for divisions = 126
Evaluating Z_I(X) over K took 126912 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3362 msec
Time for divisions = 145
Evaluating C(X) over K took 145294 msec
Scalar computation took 1217648 msec
MSM took 7469 msecs
Proof Generation Time for table=4194304 and batch=16384 and delta=524288: 1228.686709196 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=4194304 and batch=16384 is 622.5963697104766 secs
lookup time is too long, stop exploring more delta
Running setup for table size 8388608 and batch size 16384
time to setup powers = 622.848986197s
dummy pp setup takes 713 seconds
dummy table init takes 5 seconds
Time to generate example for delta = 0 is 5 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=8388608 and batch=16384 and delta=0: 0.217687316 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=8388608 and batch=16384 is 0.217687316 secs
Time to generate example for delta = 16384 is 6 secs
Time to commit t_com (excluded from lookup time) in 268ms
Committed f_com in 348ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6160 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 10568 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1764 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2144 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3116 msec
Time for divisions = 3
Evaluating C(X) over K took 3982 msec
Scalar computation took 54286 msec
MSM took 409 msecs
Proof Generation Time for table=8388608 and batch=16384 and delta=16384: 56.895747208 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=8388608 and batch=16384 is 28.556717262000003 secs
Time to generate example for delta = 32768 is 5 secs
Time to commit t_com (excluded from lookup time) in 501ms
Committed f_com in 330ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6129 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 3 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 18880 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1769 msec
Time for divisions = 6
Evaluating Z_I(X) over K took 6070 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 2994 msec
Time for divisions = 8
Evaluating C(X) over K took 8607 msec
Scalar computation took 88494 msec
MSM took 633 msecs
Proof Generation Time for table=8388608 and batch=16384 and delta=32768: 91.272869675 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=8388608 and batch=16384 is 55.617653160125 secs
Time to generate example for delta = 65536 is 5 secs
Time to commit t_com (excluded from lookup time) in 855ms
Committed f_com in 333ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6119 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 3
Computed oracles on set I in 4 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 3
Evaluated q_dvt on I in 3 secs
Computing a_vec over K took 36629 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1740 msec
Time for divisions = 14
Evaluating Z_I(X) over K took 14255 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3126 msec
Time for divisions = 17
Evaluating C(X) over K took 17815 msec
Scalar computation took 158473 msec
MSM took 1289 msecs
Proof Generation Time for table=8388608 and batch=16384 and delta=65536: 162.076354407 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=8388608 and batch=16384 is 95.57135039631251 secs
Time to generate example for delta = 131072 is 6 secs
Time to commit t_com (excluded from lookup time) in 1571ms
Committed f_com in 339ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6441 msec
Time for divisions = 36
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 6
Computed oracles on set I in 8 secs
Interpolated q polynomial in 13 secs
Time for sub-products = 0
Time for divisions = 6
Evaluated q_dvt on I in 6 secs
Computing a_vec over K took 77425 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1696 msec
Time for divisions = 30
Evaluating Z_I(X) over K took 30280 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3176 msec
Time for divisions = 35
Evaluating C(X) over K took 35356 msec
Scalar computation took 303065 msec
MSM took 2254 msecs
Proof Generation Time for table=8388608 and batch=16384 and delta=131072: 307.72829454 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=8388608 and batch=16384 is 169.78846056406252 secs
Time to generate example for delta = 262144 is 6 secs
Time to commit t_com (excluded from lookup time) in 3189ms
Committed f_com in 339ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6260 msec
Time for divisions = 84
Computed update params in 106 secs
Time for sub-products = 0
Time for divisions = 12
Computed oracles on set I in 16 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 12
Evaluated q_dvt on I in 13 secs
Computing a_vec over K took 166581 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1793 msec
Time for divisions = 62
Evaluating Z_I(X) over K took 62819 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3205 msec
Time for divisions = 72
Evaluating C(X) over K took 72512 msec
Scalar computation took 599858 msec
MSM took 3758 msecs
Proof Generation Time for table=8388608 and batch=16384 and delta=262144: 606.369273472 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=8388608 and batch=16384 is 318.0848875808438 secs
Time to generate example for delta = 524288 is 6 secs
Time to commit t_com (excluded from lookup time) in 6224ms
Committed f_com in 329ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6171 msec
Time for divisions = 190
Computed update params in 238 secs
Time for sub-products = 0
Time for divisions = 26
Computed oracles on set I in 34 secs
Interpolated q polynomial in 60 secs
Time for sub-products = 0
Time for divisions = 26
Evaluated q_dvt on I in 26 secs
Computing a_vec over K took 366037 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1696 msec
Time for divisions = 127
Evaluating Z_I(X) over K took 127944 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3203 msec
Time for divisions = 146
Evaluating C(X) over K took 146169 msec
Scalar computation took 1215030 msec
MSM took 7750 msecs
Proof Generation Time for table=8388608 and batch=16384 and delta=524288: 1226.205137361 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=8388608 and batch=16384 is 622.0285141853047 secs
lookup time is too long, stop exploring more delta
Running setup for table size 16777216 and batch size 4
time to setup powers = 1180.520022395s
dummy pp setup takes 1244 seconds
dummy table init takes 11 seconds
Time to generate example for delta = 0 is 10 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=16777216 and batch=4 and delta=0: 0.002964527 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=16777216 and batch=4 is 0.002964527 secs
Time to generate example for delta = 4 is 11 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 1 msec
MSM took 0 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=4: 0.005321964 secs
===> Average (finish at delta=4) lookup time (without table init time) for table=16777216 and batch=4 is 0.0041432455 secs
Time to generate example for delta = 8 is 11 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 1 msec
MSM took 1 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=8: 0.006386209 secs
===> Average (finish at delta=8) lookup time (without table init time) for table=16777216 and batch=4 is 0.005131696625 secs
Time to generate example for delta = 16 is 11 secs
Time to commit t_com (excluded from lookup time) in 1ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 3 msec
MSM took 3 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=16: 0.009403661 secs
===> Average (finish at delta=16) lookup time (without table init time) for table=16777216 and batch=4 is 0.0067019065625 secs
Time to generate example for delta = 32 is 11 secs
Time to commit t_com (excluded from lookup time) in 2ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 5 msec
MSM took 3 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=32: 0.012507384 secs
===> Average (finish at delta=32) lookup time (without table init time) for table=16777216 and batch=4 is 0.008925705875 secs
Time to generate example for delta = 64 is 11 secs
Time to commit t_com (excluded from lookup time) in 4ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 8 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 10 msec
MSM took 6 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=64: 0.020697692 secs
===> Average (finish at delta=64) lookup time (without table init time) for table=16777216 and batch=4 is 0.012892095499999999 secs
Time to generate example for delta = 128 is 11 secs
Time to commit t_com (excluded from lookup time) in 6ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 18 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 1 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 1 msec
Scalar computation took 23 msec
MSM took 12 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=128: 0.039576931 secs
===> Average (finish at delta=128) lookup time (without table init time) for table=16777216 and batch=4 is 0.021662197554687502 secs
Time to generate example for delta = 256 is 11 secs
Time to commit t_com (excluded from lookup time) in 9ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 41 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 2 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 2 msec
Scalar computation took 50 msec
MSM took 14 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=256: 0.068639152 secs
===> Average (finish at delta=256) lookup time (without table init time) for table=16777216 and batch=4 is 0.037998643828125 secs
Time to generate example for delta = 512 is 11 secs
Time to commit t_com (excluded from lookup time) in 17ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 120 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 5 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 4 msec
Scalar computation took 138 msec
MSM took 26 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=512: 0.169842017 secs
===> Average (finish at delta=512) lookup time (without table init time) for table=16777216 and batch=4 is 0.07881727600976561 secs
Time to generate example for delta = 1024 is 12 secs
Time to commit t_com (excluded from lookup time) in 27ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 282 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 11 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 9 msec
Scalar computation took 318 msec
MSM took 49 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=1024: 0.373489 secs
===> Average (finish at delta=1024) lookup time (without table init time) for table=16777216 and batch=4 is 0.17544026626171924 secs
Time to generate example for delta = 2048 is 12 secs
Time to commit t_com (excluded from lookup time) in 45ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 618 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 22 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 19 msec
Scalar computation took 689 msec
MSM took 69 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=2048: 0.766719392 secs
===> Average (finish at delta=2048) lookup time (without table init time) for table=16777216 and batch=4 is 0.37296423815820334 secs
Time to generate example for delta = 4096 is 12 secs
Time to commit t_com (excluded from lookup time) in 86ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1381 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 42 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 36 msec
Scalar computation took 1514 msec
MSM took 121 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=4096: 1.648422868 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=16777216 and batch=4 is 0.7904829437167968 secs
Time to generate example for delta = 8192 is 12 secs
Time to commit t_com (excluded from lookup time) in 150ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3080 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 85 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 73 msec
Scalar computation took 3348 msec
MSM took 229 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=8192: 3.599465925 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=16777216 and batch=4 is 1.7074518345440675 secs
Time to generate example for delta = 16384 is 12 secs
Time to commit t_com (excluded from lookup time) in 252ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 6728 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 174 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 150 msec
Scalar computation took 7269 msec
MSM took 419 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=16384: 7.7289620679999995 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=16777216 and batch=4 is 3.686084959964354 secs
Time to generate example for delta = 32768 is 12 secs
Time to commit t_com (excluded from lookup time) in 519ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15036 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 341 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 311 msec
Scalar computation took 16133 msec
MSM took 653 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=32768: 16.865373934 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=16777216 and batch=4 is 7.991905301645077 secs
Time to generate example for delta = 65536 is 12 secs
Time to commit t_com (excluded from lookup time) in 869ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 5 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 32911 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 698 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 0
Evaluating C(X) over K took 587 msec
Scalar computation took 35046 msec
MSM took 1201 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=65536: 36.393147911 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=16777216 and batch=4 is 17.310881082256515 secs
Time to generate example for delta = 131072 is 12 secs
Time to commit t_com (excluded from lookup time) in 1579ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 6 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 73327 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1401 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 1
Evaluating C(X) over K took 1203 msec
Scalar computation took 77644 msec
MSM took 2218 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=131072: 80.148950187 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=16777216 and batch=4 is 37.79129889590686 secs
Time to generate example for delta = 262144 is 12 secs
Time to commit t_com (excluded from lookup time) in 3177ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 84
Computed update params in 107 secs
Time for sub-products = 0
Time for divisions = 10
Computed oracles on set I in 14 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 163147 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2910 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 2
Evaluating C(X) over K took 2441 msec
Scalar computation took 171991 msec
MSM took 3984 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=262144: 176.597636485 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=16777216 and batch=4 is 83.08266403849332 secs
Time to generate example for delta = 524288 is 13 secs
Time to commit t_com (excluded from lookup time) in 6375ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 191
Computed update params in 239 secs
Time for sub-products = 0
Time for divisions = 24
Computed oracles on set I in 31 secs
Interpolated q polynomial in 59 secs
Time for sub-products = 0
Time for divisions = 24
Evaluated q_dvt on I in 24 secs
Computing a_vec over K took 360844 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 5
Evaluating Z_I(X) over K took 5561 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 0 msec
Time for divisions = 4
Evaluating C(X) over K took 4750 msec
Scalar computation took 378039 msec
MSM took 7499 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=524288: 386.754516552 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=16777216 and batch=4 is 182.37977112093452 secs
Time to generate example for delta = 1048576 is 13 secs
Time to commit t_com (excluded from lookup time) in 12188ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 427
Computed update params in 532 secs
Time for sub-products = 0
Time for divisions = 52
Computed oracles on set I in 65 secs
Interpolated q polynomial in 128 secs
Time for sub-products = 0
Time for divisions = 52
Evaluated q_dvt on I in 52 secs
Computing a_vec over K took 791002 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 11
Evaluating Z_I(X) over K took 11466 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 21 msec
Time for divisions = 9
Evaluating C(X) over K took 9626 msec
Scalar computation took 825953 msec
MSM took 14530 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=1048576: 842.888727745 secs
===> Average (finish at delta=1048576) lookup time (without table init time) for table=16777216 and batch=4 is 398.60113163819926 secs
Time to generate example for delta = 2097152 is 13 secs
Time to commit t_com (excluded from lookup time) in 20035ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 0 msec
Time for divisions = 954
Computed update params in 1178 secs
Time for sub-products = 0
Time for divisions = 110
Computed oracles on set I in 137 secs
Interpolated q polynomial in 273 secs
Time for sub-products = 0
Time for divisions = 110
Evaluated q_dvt on I in 110 secs
Computing a_vec over K took 1723201 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 0 msec
Time for divisions = 21
Evaluating Z_I(X) over K took 22312 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 38 msec
Time for divisions = 19
Evaluating C(X) over K took 19528 msec
Scalar computation took 1792650 msec
MSM took 27211 msecs
Proof Generation Time for table=16777216 and batch=4 and delta=2097152: 1824.742329064 secs
===> Average (finish at delta=2097152) lookup time (without table init time) for table=16777216 and batch=4 is 866.2087982056305 secs
lookup time is too long, stop exploring more delta
Running setup for table size 16777216 and batch size 64
time to setup powers = 1184.143799179s
dummy pp setup takes 1256 seconds
dummy table init takes 10 seconds
Time to generate example for delta = 0 is 10 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=16777216 and batch=64 and delta=0: 0.007152437 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=16777216 and batch=64 is 0.007152437 secs
Time to generate example for delta = 64 is 11 secs
Time to commit t_com (excluded from lookup time) in 4ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 108 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 0 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 0
Evaluating C(X) over K took 0 msec
Scalar computation took 123 msec
MSM took 6 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=64: 0.137164019 secs
===> Average (finish at delta=64) lookup time (without table init time) for table=16777216 and batch=64 is 0.072158228 secs
Time to generate example for delta = 128 is 11 secs
Time to commit t_com (excluded from lookup time) in 5ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 7 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 22 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 1 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 0
Evaluating C(X) over K took 1 msec
Scalar computation took 40 msec
MSM took 11 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=128: 0.059493161 secs
===> Average (finish at delta=128) lookup time (without table init time) for table=16777216 and batch=64 is 0.07553455175 secs
Time to generate example for delta = 256 is 11 secs
Time to commit t_com (excluded from lookup time) in 10ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 47 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 3 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 0
Evaluating C(X) over K took 3 msec
Scalar computation took 72 msec
MSM took 15 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=256: 0.095583436 secs
===> Average (finish at delta=256) lookup time (without table init time) for table=16777216 and batch=64 is 0.07879206731249999 secs
Time to generate example for delta = 512 is 11 secs
Time to commit t_com (excluded from lookup time) in 17ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 124 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 8 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 0
Evaluating C(X) over K took 8 msec
Scalar computation took 162 msec
MSM took 27 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=512: 0.197433137 secs
===> Average (finish at delta=512) lookup time (without table init time) for table=16777216 and batch=64 is 0.11583298006249998 secs
Time to generate example for delta = 1024 is 11 secs
Time to commit t_com (excluded from lookup time) in 25ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 271 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 16 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 0
Evaluating C(X) over K took 16 msec
Scalar computation took 333 msec
MSM took 47 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=1024: 0.38970487 secs
===> Average (finish at delta=1024) lookup time (without table init time) for table=16777216 and batch=64 is 0.20770523760937498 secs
Time to generate example for delta = 2048 is 11 secs
Time to commit t_com (excluded from lookup time) in 45ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 605 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 33 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 0
Evaluating C(X) over K took 32 msec
Scalar computation took 718 msec
MSM took 66 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=2048: 0.796263967 secs
===> Average (finish at delta=2048) lookup time (without table init time) for table=16777216 and batch=64 is 0.40352107100000006 secs
Time to generate example for delta = 4096 is 11 secs
Time to commit t_com (excluded from lookup time) in 89ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1378 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 69 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 0
Evaluating C(X) over K took 68 msec
Scalar computation took 1597 msec
MSM took 121 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=4096: 1.735610591 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=16777216 and batch=64 is 0.8383984977500001 secs
Time to generate example for delta = 8192 is 12 secs
Time to commit t_com (excluded from lookup time) in 147ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3003 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 134 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 0
Evaluating C(X) over K took 133 msec
Scalar computation took 3420 msec
MSM took 223 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=8192: 3.669687959 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=16777216 and batch=64 is 1.7743013812343744 secs
Time to generate example for delta = 16384 is 12 secs
Time to commit t_com (excluded from lookup time) in 260ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 6780 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 285 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 0
Evaluating C(X) over K took 284 msec
Scalar computation took 7642 msec
MSM took 418 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=16384: 8.106624606 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=16777216 and batch=64 is 3.835561777811523 secs
Time to generate example for delta = 32768 is 12 secs
Time to commit t_com (excluded from lookup time) in 511ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15102 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 569 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 0
Evaluating C(X) over K took 550 msec
Scalar computation took 16791 msec
MSM took 648 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=32768: 17.519975052 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=16777216 and batch=64 is 8.329027165928222 secs
Time to generate example for delta = 65536 is 12 secs
Time to commit t_com (excluded from lookup time) in 842ms
Committed f_com in 4ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33022 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1144 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 4 msec
Time for divisions = 1
Evaluating C(X) over K took 1122 msec
Scalar computation took 36392 msec
MSM took 1200 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=65536: 37.770298152 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=16777216 and batch=64 is 17.992025810502206 secs
Time to generate example for delta = 131072 is 12 secs
Time to commit t_com (excluded from lookup time) in 1575ms
Committed f_com in 4ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 7 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 6 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 73747 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2284 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 4 msec
Time for divisions = 2
Evaluating C(X) over K took 2268 msec
Scalar computation took 80584 msec
MSM took 2337 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=131072: 83.248601723 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=16777216 and batch=64 is 39.25628942472997 secs
Time to generate example for delta = 262144 is 12 secs
Time to commit t_com (excluded from lookup time) in 3163ms
Committed f_com in 4ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 6 msec
Time for divisions = 85
Computed update params in 107 secs
Time for sub-products = 0
Time for divisions = 11
Computed oracles on set I in 14 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 164032 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 4
Evaluating Z_I(X) over K took 4587 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 4 msec
Time for divisions = 4
Evaluating C(X) over K took 4443 msec
Scalar computation took 177521 msec
MSM took 3873 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=262144: 182.03110489 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=16777216 and batch=64 is 85.95410057113057 secs
Time to generate example for delta = 524288 is 12 secs
Time to commit t_com (excluded from lookup time) in 6404ms
Committed f_com in 4ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 7 msec
Time for divisions = 189
Computed update params in 237 secs
Time for sub-products = 0
Time for divisions = 24
Computed oracles on set I in 31 secs
Interpolated q polynomial in 60 secs
Time for sub-products = 0
Time for divisions = 24
Evaluated q_dvt on I in 24 secs
Computing a_vec over K took 359344 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 8
Evaluating Z_I(X) over K took 8656 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 3 msec
Time for divisions = 8
Evaluating C(X) over K took 8581 msec
Scalar computation took 385419 msec
MSM took 7536 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=524288: 394.205926069 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=16777216 and batch=64 is 187.0427830869968 secs
Time to generate example for delta = 1048576 is 13 secs
Time to commit t_com (excluded from lookup time) in 12214ms
Committed f_com in 5ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 7 msec
Time for divisions = 427
Computed update params in 531 secs
Time for sub-products = 0
Time for divisions = 53
Computed oracles on set I in 67 secs
Interpolated q polynomial in 127 secs
Time for sub-products = 0
Time for divisions = 53
Evaluated q_dvt on I in 53 secs
Computing a_vec over K took 791029 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 17
Evaluating Z_I(X) over K took 17773 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 4 msec
Time for divisions = 17
Evaluating C(X) over K took 17916 msec
Scalar computation took 844626 msec
MSM took 14574 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=1048576: 861.637513792 secs
===> Average (finish at delta=1048576) lookup time (without table init time) for table=16777216 and batch=64 is 407.4893839487466 secs
Time to generate example for delta = 2097152 is 13 secs
Time to commit t_com (excluded from lookup time) in 19804ms
Committed f_com in 4ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 7 msec
Time for divisions = 955
Computed update params in 1179 secs
Time for sub-products = 0
Time for divisions = 110
Computed oracles on set I in 136 secs
Interpolated q polynomial in 274 secs
Time for sub-products = 0
Time for divisions = 112
Evaluated q_dvt on I in 112 secs
Computing a_vec over K took 1726902 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 1 msec
Time for divisions = 35
Evaluating Z_I(X) over K took 35699 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 4 msec
Time for divisions = 34
Evaluating C(X) over K took 35306 msec
Scalar computation took 1833342 msec
MSM took 26929 msecs
Proof Generation Time for table=16777216 and batch=64 and delta=2097152: 1865.239784333 secs
===> Average (finish at delta=2097152) lookup time (without table init time) for table=16777216 and batch=64 is 885.471673383297 secs
lookup time is too long, stop exploring more delta
Running setup for table size 16777216 and batch size 256
time to setup powers = 1178.002057145s
dummy pp setup takes 1202 seconds
dummy table init takes 10 seconds
Time to generate example for delta = 0 is 10 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=16777216 and batch=256 and delta=0: 0.011591748 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=16777216 and batch=256 is 0.011591748 secs
Time to generate example for delta = 256 is 12 secs
Time to commit t_com (excluded from lookup time) in 10ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 34 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 67 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 8 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 4 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 18 msec
Time for divisions = 0
Evaluating C(X) over K took 5 msec
Scalar computation took 151 msec
MSM took 15 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=256: 0.179763213 secs
===> Average (finish at delta=256) lookup time (without table init time) for table=16777216 and batch=256 is 0.09567748050000001 secs
Time to generate example for delta = 512 is 11 secs
Time to commit t_com (excluded from lookup time) in 18ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 35 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 141 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 8 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 12 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 18 msec
Time for divisions = 0
Evaluating C(X) over K took 13 msec
Scalar computation took 251 msec
MSM took 27 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=512: 0.292670719 secs
===> Average (finish at delta=512) lookup time (without table init time) for table=16777216 and batch=256 is 0.1800606615 secs
Time to generate example for delta = 1024 is 12 secs
Time to commit t_com (excluded from lookup time) in 26ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 33 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 290 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 7 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 27 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 18 msec
Time for divisions = 0
Evaluating C(X) over K took 28 msec
Scalar computation took 442 msec
MSM took 48 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=1024: 0.505666906 secs
===> Average (finish at delta=1024) lookup time (without table init time) for table=16777216 and batch=256 is 0.3029269986875 secs
Time to generate example for delta = 2048 is 11 secs
Time to commit t_com (excluded from lookup time) in 47ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 33 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 619 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 7 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 57 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 17 msec
Time for divisions = 0
Evaluating C(X) over K took 58 msec
Scalar computation took 857 msec
MSM took 66 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=2048: 0.939016047 secs
===> Average (finish at delta=2048) lookup time (without table init time) for table=16777216 and batch=256 is 0.52617639825 secs
Time to generate example for delta = 4096 is 12 secs
Time to commit t_com (excluded from lookup time) in 89ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 33 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 1397 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 7 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 121 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 18 msec
Time for divisions = 0
Evaluating C(X) over K took 122 msec
Scalar computation took 1826 msec
MSM took 124 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=4096: 1.972856824 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=16777216 and batch=256 is 1.007210179015625 secs
Time to generate example for delta = 8192 is 11 secs
Time to commit t_com (excluded from lookup time) in 149ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 33 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3104 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 7 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 240 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 17 msec
Time for divisions = 0
Evaluating C(X) over K took 241 msec
Scalar computation took 3885 msec
MSM took 223 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=8192: 4.139294186 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=16777216 and batch=256 is 2.0485681338984376 secs
Time to generate example for delta = 16384 is 11 secs
Time to commit t_com (excluded from lookup time) in 267ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 34 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 7046 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 7 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 512 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 18 msec
Time for divisions = 0
Evaluating C(X) over K took 511 msec
Scalar computation took 8633 msec
MSM took 430 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=16384: 9.1130788 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=16777216 and batch=256 is 4.356806159597657 secs
Time to generate example for delta = 32768 is 12 secs
Time to commit t_com (excluded from lookup time) in 513ms
Committed f_com in 0ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 33 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15040 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 7 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 1001 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 17 msec
Time for divisions = 0
Evaluating C(X) over K took 997 msec
Scalar computation took 18043 msec
MSM took 632 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=32768: 18.759897026 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=16777216 and batch=256 is 9.165488478146488 secs
Time to generate example for delta = 65536 is 12 secs
Time to commit t_com (excluded from lookup time) in 868ms
Committed f_com in 12ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 34 msec
Time for divisions = 16
Computed update params in 20 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 5 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 33039 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 7 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1951 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 18 msec
Time for divisions = 1
Evaluating C(X) over K took 1946 msec
Scalar computation took 38882 msec
MSM took 1231 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=65536: 40.34196416 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=16777216 and batch=256 is 19.379285773008792 secs
Time to generate example for delta = 131072 is 12 secs
Time to commit t_com (excluded from lookup time) in 1576ms
Committed f_com in 12ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 35 msec
Time for divisions = 36
Computed update params in 46 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 6 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 73150 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 8 msec
Time for divisions = 4
Evaluating Z_I(X) over K took 4081 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 19 msec
Time for divisions = 3
Evaluating C(X) over K took 3984 msec
Scalar computation took 85111 msec
MSM took 2261 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=131072: 87.747070978 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=16777216 and batch=256 is 41.73504869581787 secs
Time to generate example for delta = 262144 is 12 secs
Time to commit t_com (excluded from lookup time) in 3166ms
Committed f_com in 12ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 34 msec
Time for divisions = 84
Computed update params in 106 secs
Time for sub-products = 0
Time for divisions = 11
Computed oracles on set I in 14 secs
Interpolated q polynomial in 27 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 163696 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 7 msec
Time for divisions = 7
Evaluating Z_I(X) over K took 7860 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 19 msec
Time for divisions = 7
Evaluating C(X) over K took 7799 msec
Scalar computation took 187054 msec
MSM took 3958 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=262144: 191.687959798 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=16777216 and batch=256 is 90.75165823546847 secs
Time to generate example for delta = 524288 is 13 secs
Time to commit t_com (excluded from lookup time) in 6310ms
Committed f_com in 12ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 34 msec
Time for divisions = 189
Computed update params in 237 secs
Time for sub-products = 0
Time for divisions = 24
Computed oracles on set I in 31 secs
Interpolated q polynomial in 58 secs
Time for sub-products = 0
Time for divisions = 25
Evaluated q_dvt on I in 25 secs
Computing a_vec over K took 358011 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 7 msec
Time for divisions = 15
Evaluating Z_I(X) over K took 15818 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 20 msec
Time for divisions = 15
Evaluating C(X) over K took 15932 msec
Scalar computation took 405411 msec
MSM took 7737 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=524288: 414.478061715 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=16777216 and batch=256 is 196.94453055334716 secs
Time to generate example for delta = 1048576 is 13 secs
Time to commit t_com (excluded from lookup time) in 12394ms
Committed f_com in 12ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 36 msec
Time for divisions = 426
Computed update params in 530 secs
Time for sub-products = 0
Time for divisions = 53
Computed oracles on set I in 67 secs
Interpolated q polynomial in 127 secs
Time for sub-products = 0
Time for divisions = 53
Evaluated q_dvt on I in 53 secs
Computing a_vec over K took 790223 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 8 msec
Time for divisions = 31
Evaluating Z_I(X) over K took 32004 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 20 msec
Time for divisions = 32
Evaluating C(X) over K took 32381 msec
Scalar computation took 885006 msec
MSM took 15012 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=1048576: 902.506287716 secs
===> Average (finish at delta=1048576) lookup time (without table init time) for table=16777216 and batch=256 is 427.748139513452 secs
Time to generate example for delta = 2097152 is 13 secs
Time to commit t_com (excluded from lookup time) in 20457ms
Committed f_com in 12ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 36 msec
Time for divisions = 956
Computed update params in 1182 secs
Time for sub-products = 0
Time for divisions = 111
Computed oracles on set I in 138 secs
Interpolated q polynomial in 275 secs
Time for sub-products = 0
Time for divisions = 113
Evaluated q_dvt on I in 113 secs
Computing a_vec over K took 1732513 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 8 msec
Time for divisions = 63
Evaluating Z_I(X) over K took 63948 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 22 msec
Time for divisions = 63
Evaluating C(X) over K took 64431 msec
Scalar computation took 1922759 msec
MSM took 26890 msecs
Proof Generation Time for table=16777216 and batch=256 and delta=2097152: 1954.619081313 secs
===> Average (finish at delta=2097152) lookup time (without table init time) for table=16777216 and batch=256 is 928.1875199483511 secs
lookup time is too long, stop exploring more delta
Running setup for table size 16777216 and batch size 4096
time to setup powers = 1181.70087398s
dummy pp setup takes 1259 seconds
dummy table init takes 11 seconds
Time to generate example for delta = 0 is 10 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=16777216 and batch=4096 and delta=0: 0.07398327 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=16777216 and batch=4096 is 0.07398327 secs
Time to generate example for delta = 4096 is 11 secs
Time to commit t_com (excluded from lookup time) in 86ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1138 msec
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 2047 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 322 msec
Time for divisions = 0
Evaluating Z_I(X) over K took 365 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 568 msec
Time for divisions = 0
Evaluating C(X) over K took 620 msec
Scalar computation took 6837 msec
MSM took 124 msecs
Proof Generation Time for table=16777216 and batch=4096 and delta=4096: 7.626428848 secs
===> Average (finish at delta=4096) lookup time (without table init time) for table=16777216 and batch=4096 is 3.850206059 secs
Time to generate example for delta = 8192 is 12 secs
Time to commit t_com (excluded from lookup time) in 149ms
Committed f_com in 108ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1098 msec
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 3633 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 308 msec
Time for divisions = 1
Evaluating Z_I(X) over K took 1040 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 550 msec
Time for divisions = 1
Evaluating C(X) over K took 1394 msec
Scalar computation took 10875 msec
MSM took 229 msecs
Proof Generation Time for table=16777216 and batch=4096 and delta=8192: 11.807044764 secs
===> Average (finish at delta=8192) lookup time (without table init time) for table=16777216 and batch=4096 is 7.306048422 secs
Time to generate example for delta = 16384 is 12 secs
Time to commit t_com (excluded from lookup time) in 260ms
Committed f_com in 108ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1115 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 1 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing a_vec over K took 7491 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 316 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2408 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 553 msec
Time for divisions = 2
Evaluating C(X) over K took 2987 msec
Scalar computation took 19980 msec
MSM took 415 msecs
Proof Generation Time for table=16777216 and batch=4096 and delta=16384: 21.11469316 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=16777216 and batch=4096 is 12.46518671675 secs
Time to generate example for delta = 32768 is 12 secs
Time to commit t_com (excluded from lookup time) in 503ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1174 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 1 secs
Interpolated q polynomial in 2 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing a_vec over K took 15481 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 309 msec
Time for divisions = 5
Evaluating Z_I(X) over K took 5304 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 593 msec
Time for divisions = 6
Evaluating C(X) over K took 6310 msec
Scalar computation took 38800 msec
MSM took 644 msecs
Proof Generation Time for table=16777216 and batch=4096 and delta=32768: 40.223465786 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=16777216 and batch=4096 is 22.164282239437505 secs
Time to generate example for delta = 65536 is 12 secs
Time to commit t_com (excluded from lookup time) in 844ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1122 msec
Time for divisions = 16
Computed update params in 21 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 34132 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 326 msec
Time for divisions = 10
Evaluating Z_I(X) over K took 10707 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 570 msec
Time for divisions = 12
Evaluating C(X) over K took 12481 msec
Scalar computation took 77810 msec
MSM took 1200 msecs
Proof Generation Time for table=16777216 and batch=4096 and delta=65536: 79.848856839 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=16777216 and batch=4096 is 41.71936851117188 secs
Time to generate example for delta = 131072 is 12 secs
Time to commit t_com (excluded from lookup time) in 1529ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1131 msec
Time for divisions = 37
Computed update params in 47 secs
Time for sub-products = 0
Time for divisions = 5
Computed oracles on set I in 7 secs
Interpolated q polynomial in 12 secs
Time for sub-products = 0
Time for divisions = 5
Evaluated q_dvt on I in 5 secs
Computing a_vec over K took 74194 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 315 msec
Time for divisions = 21
Evaluating Z_I(X) over K took 21924 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 618 msec
Time for divisions = 25
Evaluating C(X) over K took 25261 msec
Scalar computation took 160183 msec
MSM took 2283 msecs
Proof Generation Time for table=16777216 and batch=4096 and delta=131072: 163.46609398 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=16777216 and batch=4096 is 82.3416816255 secs
Time to generate example for delta = 262144 is 12 secs
Time to commit t_com (excluded from lookup time) in 3103ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1140 msec
Time for divisions = 84
Computed update params in 105 secs
Time for sub-products = 0
Time for divisions = 11
Computed oracles on set I in 15 secs
Interpolated q polynomial in 28 secs
Time for sub-products = 0
Time for divisions = 11
Evaluated q_dvt on I in 11 secs
Computing a_vec over K took 163472 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 325 msec
Time for divisions = 43
Evaluating Z_I(X) over K took 43932 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 605 msec
Time for divisions = 50
Evaluating C(X) over K took 50227 msec
Scalar computation took 332258 msec
MSM took 3850 msecs
Proof Generation Time for table=16777216 and batch=4096 and delta=262144: 337.411096472 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=16777216 and batch=4096 is 167.0696110917344 secs
Time to generate example for delta = 524288 is 13 secs
Time to commit t_com (excluded from lookup time) in 6439ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1177 msec
Time for divisions = 189
Computed update params in 237 secs
Time for sub-products = 0
Time for divisions = 25
Computed oracles on set I in 32 secs
Interpolated q polynomial in 59 secs
Time for sub-products = 0
Time for divisions = 24
Evaluated q_dvt on I in 25 secs
Computing a_vec over K took 360850 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 325 msec
Time for divisions = 86
Evaluating Z_I(X) over K took 86638 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 615 msec
Time for divisions = 101
Evaluating C(X) over K took 101279 msec
Scalar computation took 695078 msec
MSM took 7567 msecs
Proof Generation Time for table=16777216 and batch=4096 and delta=524288: 704.583271635 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=16777216 and batch=4096 is 344.7505307272324 secs
Time to generate example for delta = 1048576 is 12 secs
Time to commit t_com (excluded from lookup time) in 12056ms
Committed f_com in 105ms
Using update = true
Time for divisions = 0
Computed update params in 0 secs
Time for sub-products = 0
Time for divisions = 0
Computed oracles on set I in 0 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 0
Evaluated q_dvt on I in 0 secs
Computing b_vec over I took 1166 msec
Time for divisions = 426
Computed update params in 530 secs
Time for sub-products = 0
Time for divisions = 54
Computed oracles on set I in 68 secs
Interpolated q polynomial in 128 secs
Time for sub-products = 0
Time for divisions = 53
Evaluated q_dvt on I in 53 secs
Computing a_vec over K took 793155 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Evaluating Z_I'(X) over I took 308 msec
Time for divisions = 172
Evaluating Z_I(X) over K took 172697 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 0
Interpolating C(X) took 617 msec
Time for divisions = 202
Evaluating C(X) over K took 202712 msec
Scalar computation took 1458099 msec
MSM took 14312 msecs
Proof Generation Time for table=16777216 and batch=4096 and delta=1048576: 1475.585633155 secs
===> Average (finish at delta=1048576) lookup time (without table init time) for table=16777216 and batch=4096 is 718.170423554788 secs
lookup time is too long, stop exploring more delta
Running setup for table size 16777216 and batch size 16384
time to setup powers = 1181.079964394s
dummy pp setup takes 1325 seconds
dummy table init takes 11 seconds
Time to generate example for delta = 0 is 10 secs
Time to commit t_com (excluded from lookup time) in 0ms
Committed f_com in 0ms
Using update = false
Proof Generation Time for table=16777216 and batch=16384 and delta=0: 0.21936925 secs
===> Average (finish at delta=0) lookup time (without table init time) for table=16777216 and batch=16384 is 0.21936925 secs
Time to generate example for delta = 16384 is 11 secs
Time to commit t_com (excluded from lookup time) in 251ms
Committed f_com in 329ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6047 msec
Time for divisions = 3
Computed update params in 4 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 1 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 10310 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1695 msec
Time for divisions = 2
Evaluating Z_I(X) over K took 2041 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 2918 msec
Time for divisions = 3
Evaluating C(X) over K took 3748 msec
Scalar computation took 52681 msec
MSM took 409 msecs
Proof Generation Time for table=16777216 and batch=16384 and delta=16384: 55.257549153 secs
===> Average (finish at delta=16384) lookup time (without table init time) for table=16777216 and batch=16384 is 27.7384592015 secs
Time to generate example for delta = 32768 is 12 secs
Time to commit t_com (excluded from lookup time) in 513ms
Committed f_com in 348ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6211 msec
Time for divisions = 7
Computed update params in 9 secs
Time for sub-products = 0
Time for divisions = 2
Computed oracles on set I in 3 secs
Interpolated q polynomial in 3 secs
Time for sub-products = 0
Time for divisions = 2
Evaluated q_dvt on I in 2 secs
Computing a_vec over K took 18651 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1692 msec
Time for divisions = 5
Evaluating Z_I(X) over K took 5991 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3036 msec
Time for divisions = 8
Evaluating C(X) over K took 8621 msec
Scalar computation took 87612 msec
MSM took 633 msecs
Proof Generation Time for table=16777216 and batch=16384 and delta=32768: 90.494649113 secs
===> Average (finish at delta=32768) lookup time (without table init time) for table=16777216 and batch=16384 is 54.71191666224999 secs
Time to generate example for delta = 65536 is 12 secs
Time to commit t_com (excluded from lookup time) in 842ms
Committed f_com in 330ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6241 msec
Time for divisions = 16
Computed update params in 21 secs
Time for sub-products = 0
Time for divisions = 3
Computed oracles on set I in 5 secs
Interpolated q polynomial in 6 secs
Time for sub-products = 0
Time for divisions = 3
Evaluated q_dvt on I in 3 secs
Computing a_vec over K took 37380 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1695 msec
Time for divisions = 14
Evaluating Z_I(X) over K took 14158 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3091 msec
Time for divisions = 17
Evaluating C(X) over K took 17699 msec
Scalar computation took 158441 msec
MSM took 1256 msecs
Proof Generation Time for table=16777216 and batch=16384 and delta=65536: 161.925132493 secs
===> Average (finish at delta=65536) lookup time (without table init time) for table=16777216 and batch=16384 is 94.92530894387498 secs
Time to generate example for delta = 131072 is 12 secs
Time to commit t_com (excluded from lookup time) in 1557ms
Committed f_com in 338ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6180 msec
Time for divisions = 37
Computed update params in 48 secs
Time for sub-products = 0
Time for divisions = 6
Computed oracles on set I in 8 secs
Interpolated q polynomial in 13 secs
Time for sub-products = 0
Time for divisions = 6
Evaluated q_dvt on I in 6 secs
Computing a_vec over K took 77861 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1695 msec
Time for divisions = 30
Evaluating Z_I(X) over K took 30083 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3209 msec
Time for divisions = 35
Evaluating C(X) over K took 35430 msec
Scalar computation took 302711 msec
MSM took 2344 msecs
Proof Generation Time for table=16777216 and batch=16384 and delta=131072: 307.501077291 secs
===> Average (finish at delta=131072) lookup time (without table init time) for table=16777216 and batch=16384 is 169.368455192875 secs
Time to generate example for delta = 262144 is 12 secs
Time to commit t_com (excluded from lookup time) in 3158ms
Committed f_com in 338ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6235 msec
Time for divisions = 85
Computed update params in 107 secs
Time for sub-products = 0
Time for divisions = 12
Computed oracles on set I in 16 secs
Interpolated q polynomial in 28 secs
Time for sub-products = 0
Time for divisions = 12
Evaluated q_dvt on I in 13 secs
Computing a_vec over K took 168465 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1743 msec
Time for divisions = 62
Evaluating Z_I(X) over K took 62886 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3270 msec
Time for divisions = 73
Evaluating C(X) over K took 73132 msec
Scalar computation took 603347 msec
MSM took 3910 msecs
Proof Generation Time for table=16777216 and batch=16384 and delta=262144: 610.041564128 secs
===> Average (finish at delta=262144) lookup time (without table init time) for table=16777216 and batch=16384 is 318.79708305801563 secs
Time to generate example for delta = 524288 is 12 secs
Time to commit t_com (excluded from lookup time) in 6457ms
Committed f_com in 329ms
Using update = true
Time for divisions = 1
Computed update params in 1 secs
Time for sub-products = 0
Time for divisions = 1
Computed oracles on set I in 2 secs
Interpolated q polynomial in 0 secs
Time for sub-products = 0
Time for divisions = 1
Evaluated q_dvt on I in 1 secs
Computing b_vec over I took 6284 msec
Time for divisions = 192
Computed update params in 240 secs
Time for sub-products = 0
Time for divisions = 26
Computed oracles on set I in 33 secs
Interpolated q polynomial in 60 secs
Time for sub-products = 0
Time for divisions = 27
Evaluated q_dvt on I in 27 secs
Computing a_vec over K took 368502 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Evaluating Z_I'(X) over I took 1700 msec
Time for divisions = 127
Evaluating Z_I(X) over K took 127711 msec
Time taken: 0
Time for sub-products = 0
Time for divisions = 1
Interpolating C(X) took 3349 msec
Time for divisions = 146
Evaluating C(X) over K took 146252 msec
Scalar computation took 1218219 msec
MSM took 7493 msecs
Proof Generation Time for table=16777216 and batch=16384 and delta=524288: 1229.153400745 secs
===> Average (finish at delta=524288) lookup time (without table init time) for table=16777216 and batch=16384 is 624.0340939708283 secs
lookup time is too long, stop exploring more delta
test ramlookup::cq::tests::test_delta_lookup ... ok

successes:

successes:
    ramlookup::cq::tests::test_delta_lookup

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 37 filtered out; finished in 50945.41s

